- date: 2024-09-01
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 167 ~ 187
  notes: |
    FP のテクニックでドメインのパイプラインを繋ぎ終えた。 lifting してて良い。
    例外避けたいから次章出直すとのこと。Expecto と FsCheck は試せてないからそのうちやりたい(と言いつつ随分経った)。
    部分適用による依存性の注入はわたしもよくやるのだけど、多過ぎると面倒なので Record に詰め込むことをしている。
    この章のアプローチでは引数に羅列しているのが、どうなんだろ。
    この本でモナドでの実装は詳細に触れないようなので自分で考えな。
- date: 2024-09-02
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 188 ~ 218
  notes: |
    FP 的エラーの扱い。 ようやく railway oriented. 明示的エラーといえば Java の検査例外を思い出す。
    `bind`, `map` からの独自 computation って流れだがわたしはあんま使いこなせてないからなじませたいな。
    結局のところエラーの扱いがクリーン()なコードを汚すからその複雑性を DSL に寄せるという理解。
    それ自体は好きだが Go のように愚直にエラー処理書くのもわかりやすいといえばそうやと思うので流派かなあ。
- date: 2024-09-03
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 219 ~ 239
  notes: |
    シリアライズは地道に手で書く感じ。キレイな世界に出入りするための通過儀礼みたいなもんか。
    高級なモデルから平易なデータ構造に落とすため single case union すらもシリアライズ用の DTO に丁寧にマッピングする。
- date: 2024-09-04
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 240 ~ 251
  notes: |
    永続化。CQS と CQRS は違うと。モデル自体が分かれてるのが CQRS でいいかな。
    イベントソーシングのも当然触れられてるが、十分に説明できないとスルーされる。
- date: 2024-09-05
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 252 ~ 266
  notes: |
    RDB への永続化。
    少しテーブル設計に触れてるけど、元々キレイな世界とその他で分けてるのだし、テーブル設計は RDB の事情に合わせてやればいい。
    ORM 使わないのはわたしの好みなので良い。補償トランザクションは知ららなかったので調べておく。
- date: 2024-09-06
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 267 ~ 287
  notes: |
    設計を更新するのに型駆動でコンパイルエラー活用してやるって話。
    このときにはじめに作ったドメイン文書には触れないんかー。これで本は終わり。
    本を通して、 computation や active pattern の F# 機能を活用することあれど、データと処理が分割された FP の特徴を活かして静的型駆動でドメインを表現するテクニックの話だったと理解した。
    個人的に気になった F# でのパフォの改善等は触れられてない(link は多少あるか)ので自分でやれってことやろな。
- date: 2024-09-07
  bookTitle: プログラミング F#
  bookAuthor: Chris Smith
  previouslyRead: true
  pages: 267 ~ 287
  notes: |
    なんか降りてきてコード引用符の章を行ったり来たりして読んだ。
    古いので Microsoft Learn で code quotation のページも合わせて見る。
    pocof のクエリに code quotation 使えるよな。動的に関数生成したら速いかはわからんので試さないといけない。
    読後、訳者の人 dmmf 本のレビュワの人だと気づいた。
