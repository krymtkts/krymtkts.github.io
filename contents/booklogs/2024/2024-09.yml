- date: 2024-09-01
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 167 ~ 187
  notes: |
    FP のテクニックでドメインのパイプラインを繋ぎ終えた。 lifting してて良い。
    例外避けたいから次章出直すとのこと。Expecto と FsCheck は試せてないからそのうちやりたい(と言いつつ随分経った)。
    部分適用による依存性の注入はわたしもよくやるのだけど、多過ぎると面倒なので Record に詰め込むことをしている。
    この章のアプローチでは引数に羅列しているのが、どうなんだろ。
    この本でモナドでの実装は詳細に触れないようなので自分で考えな。
- date: 2024-09-02
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 188 ~ 218
  notes: |
    FP 的エラーの扱い。 ようやく railway oriented. 明示的エラーといえば Java の検査例外を思い出す。
    `bind`, `map` からの独自 computation って流れだがわたしはあんま使いこなせてないからなじませたいな。
    結局のところエラーの扱いがクリーン()なコードを汚すからその複雑性を DSL に寄せるという理解。
    それ自体は好きだが Go のように愚直にエラー処理書くのもわかりやすいといえばそうやと思うので流派かなあ。
- date: 2024-09-03
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 219 ~ 239
  notes: |
    シリアライズは地道に手で書く感じ。キレイな世界に出入りするための通過儀礼みたいなもんか。
    高級なモデルから平易なデータ構造に落とすため single case union すらもシリアライズ用の DTO に丁寧にマッピングする。
- date: 2024-09-04
  bookTitle: Domain Modeling Made Functional 関数型ドメインモデリング ドメイン駆動設計と F# でソフトウェアの複雑さに立ち向かおう
  bookAuthor: Scott Wlaschin
  pages: 240 ~ 251
  notes: |
    永続化。CQS と CQRS は違うと。モデル自体が分かれてるのが CQRS でいいかな。
    イベントソーシングのも当然触れられてるが、十分に説明できないとスルーされる。
