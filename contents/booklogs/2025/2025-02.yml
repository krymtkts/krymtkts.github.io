- date: 2025-02-01
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 87 ~ 90
  notes: |
    第 6 章 仮想記憶。
    仮想記憶の中核となるのは、仮想アドレス空間(virtual address space)と物理アドレス空間(physical address space)を対応付けるアドレス変換(address translation)を行う機能。
    主記憶よりも大きなメモリがあるように見せかける等メモリの使い勝手を飛躍的に高める。
    この対応付けはページテーブル(page table)と呼ばれるデータ構造によって行われ、ページサイズ(page size)の単位で行われる。
    主記憶上のページテーブルから変換ルールを読み出すのをテーブルウォーク(table walk)と呼ぶ。
    このため本来のアクセスに加えテーブルウォークのため 2 回主記憶にアクセスが必要になり、無駄に長いサイクルがかかる。
    この本を読んでると、一難去ってまた一難という感じで次々に課題と緩和策の繰り返しから CPU のありがたみが沁みるよな。
- date: 2025-02-02
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 91 ~ 94
  notes: |
    第 6 章 仮想記憶。
    TLB(Translation Lookaside Buffer)はページテーブルの一部を高速に主記憶から読み込んでおくためのハードウェアで、テーブルウォークの遅さを緩和する。
    ページテーブルと TLB は主記憶とキャッシュメモリの関係に近い。
    TLB は主に 4KB のページ単位のため、空間局所性が高ければより発生しにくいが、ミスは発生しうる。これを TLB ミス(TLB miss)と呼ぶ。キャッシュミスよりその頻度は低いが、コストはより高い。 TLB ミスの要因やダメージもキャッシュと同様。
    ただしフルアソシティブ(full associtive)の TLB はキャッシュは競合性ミスが発生しない。
    TLB は流石に初めて聞いた気がする。ここでも緩和のための仕組みがさらなる複雑さを...
- date: 2025-02-03
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 94 ~ 100
  notes: |
    第 6 章 仮想記憶。
    仮想記憶のソフトウェア制御は OS の仕事なので(開発者が書く)ソフトウェアで対処できるようなものではない。
    それでも TLB ミスはキャッシュミスと共通する点(初期参照ミス・容量性ミス・競合性ミス)があり同じ手法が有効。
    仮想記憶にはアドレス変換の他に重大なダメージをもたらすページフォールト(page fault)(disk I/O が発生する)ある。
    ここまで来るとソフトウェア的な対策は一定程度可能とはいえ CPU 毎にも異なるからどうしようもない感出てくるな。
- date: 2025-02-04
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 101 ~ 106
  notes: |
    第 7 章 I/O。
    本書では CPU の外部デバイスの内主記憶を除くデバイスへの操作を I/O アクセスと呼ぶ。
    I/O アクセスはメモリのように見せかけるメモリマップド I/O(memory-mapped I/O)とデバイス専用アドレス空間を用いる I/O アドレス空間(I/O address space)を用いる I/O 専用命令がある。
    I/O アクセスにより、デバイスへの指示(I/O デバイスへの書き込み)、状態の取得(I/O デバイスからの読み込み)、ネットワークからの受信とかディスクへの書き出しといったデータ転送(I/O デバイス→レジスタ→主記憶の転送)といった操作が実現できる。
    この章は I/O bound の話なので多少イメージつきやすそう。逆に今までよく掘り下げずに来たなという自戒...
- date: 2025-02-05
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 106 ~ 111
  notes: |
    第 7 章 I/O。
    I/O デバイスはコストと消費電力の観点から CPU に比べると動作周波数が低いため CPU から見て遅い。
    I/O バスもそれ同様なのと、多数のデバイスを識別する新規デバイスへの対応、動的な着脱、バスの規格やプロトコル・複数のバスをまたぐことで、遅い。
    また I/O デバイス自体がキャッシュ・バッファ・プリフェッチといった高速化手法を使えず、遅い。
    これらの特性は汎用的な対処が難しいので CPU 的に割り込み要求(interrupt request)、 CPU を介さずメモリ間でデータ転送する DMA(Direct Memory Access) といった I/O アクセス自体を減らす仕組みがある。
    CPU によっては I/O アクセスを制御する命令、 I/O デバイスから主記憶に直接アクセス可能、 I/O デバイスと CPU が L3 キャッシュを共有するなどの工夫もある。
    I/O デバイスの遅さを緩和するためなら何でもやるなという印象。
- date: 2025-02-06
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 111 ~ 118
  notes: |
    第 7 章 I/O。
    ソフトウェア的な I/O デバイスの遅さを緩和する方法は基本的に I/O アクセスの回数を減らす方法。
    I/O デバイスへのアクセスをページキャッシュ・バッファキャッシュで減らす、また 1 回の I/O アクセスにまとめる等。
    ただし I/O デバイスへのアクセス回数の減少はそのまま応答性の劣化につながると。ここでいう応答性はリアルタイム性能？
    計測実験は RTC(Real Time Clock) と PCI Express 。
    I/O なくしてソフトウェアは成り立たないのでなくすことはできないが緩和策を使ってうまく付き合おう、というわけか。悩ましいな。
- date: 2025-02-07
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 119 ~ 122
  notes: |
    第 8 章 システムコール、例外、割り込み。
    分岐命令の他に命令流の特別な切り替えが存在する。それらの呼び方や定義は CPU によってまちまちなので、本書では例外・割り込み系と総称する。
    システムコール(内部的に特権レベルの変更命令で明示的に発生)、例外(内部的に命令実行時のエラーなどハードウェアが検知し暗黙的に発生)、割り込み(外部的要求により発生)の 3 つに分類する。
    発生頻度が比較的稀であること、ソフトウェア的な観点で対策が難しく、もっと低いレイヤでの対応が主。
    この図がわかり良いよな言葉に出来ないけど。発生する場所とか考えたことなかった。
- date: 2025-02-08
  bookTitle: 分子調理の日本食
  pages: 1 ~ 13
  readCount: 2
  notes: |
    今日は酔っ払っており、手元にある本を読んだ。
    2021 年の本だが、この本の仮想のレシピ集は気合を入れれば日常的にできそうだなという感触を掴めた(恐らく記述時点でそれを狙ってたのであろうが)。
    しかしスノードームふろふき大根、これの茹で汁を捨てるんだ～と思い、煮汁の味を凝縮して提供できないのかと思ったわたしは、教科書的には NG だろうか。
    このような読者に対しては、まず実践してからモノを言えと。酔っ払ってないときにご飯を作って実践したいと思いますんません。
- date: 2025-02-09
  bookTitle: 分子調理の日本食
  pages: 1 ~ 155
  readCount: 2
  notes: |
    素面で読み返すべきかなと思って再度読んだ。
    昨日煮汁を使ったらええんちゃうかと書いたけど、透明度の高いジェランガムを使ってスノードームを模したいので煮汁を使ったら濁るからイマイチな気がする。
    濁ると吹雪いてる感じになりそう。白濁していいなら元々寒天でも使ってるだろうに。
    ジェランガムはじめとして、他の添加物も器具も結構高くてお試しで買うにはかなりハードル高いな。そういう意味でも空想の料理なのかも。大豆レシチンは唯一手頃？
- date: 2025-02-10
  bookTitle: 家庭の低温調理 完璧な食事のためのモダンなテクニックと肉、魚、野菜、デザートのレシピ 99
  pages: 1 ~ 45
  notes: |
    分子調理の延長で読んだ。
    Nomiku は潰れたけど他メーカーがポータブルな低温調理器具を販売し続けてるのも考えたらやっぱイノベータやったんやろな。
    卵の章まで読んだが、日本の場合は生卵を食すために尋常でない努力があるので安全に生卵を食べれるから、低温殺菌のところはピンときにくい。
    でも俄然興味が湧いてくる。低温調理器具ほしいな。
- date: 2025-02-11
  bookTitle: 家庭の低温調理 完璧な食事のためのモダンなテクニックと肉、魚、野菜、デザートのレシピ 99
  pages: 46 ~ 121
  notes: |
    低温調理にも色々あって、そのもので一品を仕上げるのと、下ごしらえとして施してその後さっと焼き目をつけたりで＋αする方法がある。
    いずれにも同じなのが高温で調理すると実現できない手軽な方法で失敗しないジューシーな食感が得られるところか。
    マスのオイル煮とコンフィは俄然興味あるな。コンフィは Cooking for Geeks に油は熱を伝える以外に関係ないって書いてたし、あれは低温調理ならではの味わいなんやろう。
- date: 2025-02-12
  bookTitle: 家庭の低温調理 完璧な食事のためのモダンなテクニックと肉、魚、野菜、デザートのレシピ 99
  pages: 122 ~ 175
  notes: |
    豚の低温調理で気になるのは菌や寄生虫だが、こういうのは本では直接的に書いてないから低温調理器具の説明書で見るのが良いか。でも 57 ℃あたりが下限になってるし大丈夫そうか。
    肉の調理がこれまででも最長時間ぽいな。実際こんなに調理に時間をかけた経験は発酵以外にない。
    しかしキュアリングソルトが使いにくいからパストラミが作れないのは残念。
    まだ低温調理器具買ってもないけど気持ちだけは高まってきた。
- date: 2025-02-13
  bookTitle: 家庭の低温調理 完璧な食事のためのモダンなテクニックと肉、魚、野菜、デザートのレシピ 99
  pages: 176 ~ 205
  notes: |
    野菜のセルロースを分解するためにほとんどのレシピで 85 ℃。
    根菜の長時間調理だとボツリヌス菌とか大丈夫なんかなと思ったけど、長期保存しないメニューで調理時間もさほど長くないし 85 ℃で調理するから安心なんかな。
    調べると、中心温度 80 ℃で 30 分間の加熱で毒素が失活するというのがあったし。
    パースニップは流石に近所で手に入らんな。万能マッシュルームはめちゃうまそう。
- date: 2025-02-14
  bookTitle: 家庭の低温調理 完璧な食事のためのモダンなテクニックと肉、魚、野菜、デザートのレシピ 99
  pages: 206 ~ 237
  notes: |
    卵を使ったデザートが多いのは、凝固点の 85 ℃に達さずに完璧に卵を調理するには低温調理が向いてるから。
    また風味の抽出に向いてるからアイスクリームに最適と。ただし原液を作るまでが低温調理で以降はマシンなりを使う必要がある。
    個人的には子どもに野菜ペーストを混ぜた団子が好評だったので、レンチンより低温調理の方がカボチャとかの野菜の風味が上がるなら、次作るときに応用できそうで興味あるな。
- date: 2025-02-15
  bookTitle: 家庭の低温調理 完璧な食事のためのモダンなテクニックと肉、魚、野菜、デザートのレシピ 99
  pages: 238 ~ 263
  notes: |
    アルコールを蒸散させることなく適度な温度で砂糖を溶かし風味を抽出するには低温調理が向いていると(この本では 60 ℃)。
    85 ℃以上の調理になるとガラス容器が急な加熱で割れることがあるので、あらかじめ容器を入れるなど徐々に加熱するよう注意が必要。
    カクテルのことを全然知らないので調べたが、ビターズは蒸留酒に様々な材料を漬け込んで作成する苦みと香りが強いアルコール飲料のことで、カクテルに使われることが多いらしい。
    そのビターズやシロップ等を作るのに低温調理が向いているということみたい。
    甘い酒を好まないので 20 年くらいカクテルに触れてない気がするけど、ペニシリンはスコッチベースだしこれは試してもいいかも。
