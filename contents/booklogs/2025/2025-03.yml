- date: 2025-03-01
  bookTitle: ピクルスと漬物の歴史
  pages: 127 ~ 133
  notes: |
    南アジアの漬物はイギリス・アメリカといった大西洋の国々に強く影響を与えた。
    インドのアーユルベーダが酸味≒漬物の価値を確立。
    アチャールで特徴的なのはごま油やマスタードオイルで漬ける点。火の代わりに強烈な太陽光で細菌やカビを殺し腐敗を防ぐ。
    チャツネもインドから大西洋を渡った。
    油で漬けるのはちょっと容器的な意味でハードル高いが覚えておく。
- date: 2025-03-02
  bookTitle: ピクルスと漬物の歴史
  pages: 134 ~ 157
  notes: |
    イギリス人は漬物の象徴のような存在だった。
    家庭菜園から保存の必要で始まり、インドとの交易で風変わりな漬物に発展。ゆで卵の酢漬けもこの頃文献に現れる。
    ただ色鮮やかな漬物への愛が銅の添加による緑青中毒にまでつながる。肉・鳥・魚の漬物も積極的に行われた。
    イギリスとチャツネとの出会い、レシピ考案者のメジャー・グレイの名は今も残る。
    そしてウスターソース。タマリンド・アンチョビを樽熟成することで生まれた。
    しかしケチャップははじめきのこの漬物から染み出す茶色い漬け汁キャチャップだった。
    トマトの可能性に気づきトマトケチャップを生んだのはイギリスからの流行を受けたアメリカだった。
    アメリカのピクルスで名を馳せたハインツもトマトケチャップ製造に参入。他にはアメリカ・ルイジアナではタバスコが生まれた。
    歴史としては面白くもっと探求したいが、喫緊の漬物テーマにはちょっとソースの話題過ぎて沿わないかなｗ
- date: 2025-03-03
  bookTitle: ピクルスと漬物の歴史
  pages: 158 ~ 169
  notes: |
    現代の漬物は非醗酵と古き良き醗酵の二手に分かれている。特にアメリカは非醗酵の漬物が市場を占める。
    健康への利点・自然食品の流行で自然醗酵の漬物も再評価されている。
    ピクルス液の飲料やアイスキャンディー、ピックルバックといった新しい使い方も現れた。
    しかし漬物の食べ過ぎが癌のリスクを高めるという報告もある。また塩分過多も問題。
    漬物の、傷みやすい食材を長期保存可能にする自然技術という側面は、食糧問題でも注目されている。
    これで本編は終わり。最後はまとめに入ってきたから漬物アイデアには特になかったが流れは興味深かった。
    醗酵リバイバルの話もあるし、減り続ける「家庭の漬物」を細々と続けるのもいいもんや。
- date: 2025-03-04
  bookTitle: ピクルスと漬物の歴史
  pages: 170 ~ 192
  notes: |
    訳者あとがきにある通り、何か漬けたくなる気持ちは増幅した。読む前から漬けるアイデア探してたのもあって。
    とりあえず今回は茄子・ピーマン・キュウリ・セロリあたりの組み合わせで漬けてみる。ニンニクモ添えて。
    キムチやトールシを見て複数の野菜を混ぜたくなった。ただし味付けは純粋に塩と前の漬け汁。鷹の爪くらいはいれるか？
    あと近い内に塩レモンはいつか漬けてみたい。ノーワックスのレモンを仕入れるしかないよな。
- date: 2025-03-05
  bookTitle: プログラマーのための CPU 入門 CPU は如何にしてソフトウェアを高速に実行するか
  pages: 157 ~ 169
  notes: |
    第 10 章 キャッシュコヒーレンス。
    共有メモリ型のマルチプロセッサシステムで個々の CPU が持つキャッシュに書き込んだ値を適切に他の CPU に伝える仕組みがキャッシュコヒーレンス制御。 coherence とは「最新の値が読み出されること」。
    ハードウェア的に解決する方法としては CPU の状態を除き見する snoop 方式と共通のテーブルで管理する directory 方式がある。プロセッサ数が多いと後者が用いられる傾向があるが 1 回あたりの処理性能は前者が優る。
    スヌープ方式には書き込み時に他のキャッシュを無効化する write invalidate と他のキャッシュにも書き込む write update があり、前者が主流。
    write invalidate の主流プロトコル MSI では無効化されたキャッシュの次に他の CPU のキャッシュを取得するため CPU 間の通信が発生する。
    キャッシュが無効化されることで他の CPU で必ずキャッシュミスを起こす。これを coherence miss という。
    また false sharing と呼ばれる、異なる CPU が同じキャッシュラインを使うことで本来は関係ない箇所でキャッシュミスが発生する問題もある。
    false sharing やばいな...こんなん padding で回避とか？限界がある気がするけど。
