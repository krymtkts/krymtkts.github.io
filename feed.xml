<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://krymtkts.github.io/' rel='self' type='application/rss+xml'/>
<title>
krymtkts
</title>
<link>
http://krymtkts.github.io/
</link>
<description>
krymtkts's personal blog
</description>
<lastBuildDate>
Sun, 02 Jun 2019 16:01:40 +0900
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
http://krymtkts.github.io/posts/2019-06-02_install-shfmt-to-win-using-cli
</guid>
<link>
http://krymtkts.github.io/posts/2019-06-02_install-shfmt-to-win-using-cli
</link>
<title>
シェルスクリプトのフォーマッタをCLIでインストールする
</title>
<description>
&lt;p&gt;小ネタ。&lt;/p&gt;&lt;p&gt;へーしゃの仕事では、Bashで書かれたスクリプトの出番がめちゃくちゃ多い。&lt;/p&gt;&lt;p&gt;Bashが得意じゃないマンのわたしにとっては、そういったスクリプトを読み書きに慣れてないこともあり、結構疲れる仕事である。&lt;/p&gt;&lt;p&gt;そこでせめて書くのだけは少しでも楽したいと思って、フォーマッタを導入しようと思った。&lt;/p&gt;&lt;h3 id=&quot;ツールを導入する&quot;&gt;ツールを導入する&lt;/h3&gt;&lt;p&gt;shfmtというgolang製のツールがあるので、それを採択。&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/mvdan/sh'&gt;mvdan/sh: A shell parser, formatter, and interpreter (POSIX/Bash/mksh)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;しかし悲しいかな、Windows用に提供されてるパッケージはScoopのみ(リンク切れてるけど)でChocolateyにない様子🤔(筆者はChocolateyユーザである)。&lt;/p&gt;&lt;p&gt;代わりにCLIでのインストールを使うことにする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;cd $&amp;#40;mktemp -d&amp;#41;; go mod init tmp; go get mvdan.cc/sh/v3/cmd/shfmt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;でも&lt;code&gt;mktemp&lt;/code&gt;コマンドはPowerShellにはないし...そこは&lt;code&gt;mkdir&lt;/code&gt;で茶を濁す。あとtmpフォルダの後始末もする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;cd $&amp;#40;mkdir tmp&amp;#41;; go mod init tmp; go get mvdan.cc/sh/v3/cmd/shfmt; cd ../; rm -r tmp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ええがな。&lt;/p&gt;&lt;h3 id=&quot;雑記&quot;&gt;雑記&lt;/h3&gt;&lt;p&gt;5月後半はうまく波に乗れずブログを書けなかった。まだアウトプットが習慣化していないようなので、きちんと積み重ねしていきたいもんやで🤔&lt;/p&gt;
</description>
<pubDate>
Sun, 02 Jun 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-05-11-pipenv-skeleton
</guid>
<link>
http://krymtkts.github.io/posts/2019-05-11-pipenv-skeleton
</link>
<title>
Pipenvのテンプレを作った
</title>
<description>
&lt;p&gt;&lt;a href='/posts/2019-04-29-bias-amp-2issue'&gt;前回&lt;/a&gt;の最後に触れた、仕事で経験を得た2019年のイケてそうなPython開発環境構築について。&lt;/p&gt;&lt;p&gt;この度新し目と思われるPythonのプロジェクト構築について学んだので、次回Pythonを触ることがあったとしてもぱぱっと始められるようにテンプレートを作ろうと思った次第である。&lt;/p&gt;&lt;p&gt;過去のeasy_installとかpipまでで知識が止まってたが、新たにpipenvを知ってかなり便利に使えるいい感じの印象を得たのもあって、動機付けされた感じ。&lt;/p&gt;&lt;p&gt;なので、勉強がてらGW中のお楽しみにちょろっと作った。&lt;/p&gt;&lt;h3 id=&quot;作ったもの&quot;&gt;作ったもの&lt;/h3&gt;&lt;p&gt;&lt;a href='https://github.com/krymtkts/pipenv-skeleton'&gt;krymtkts/pipenv-skeleton&lt;/a&gt;&lt;/p&gt;&lt;p&gt;いろいろとググって、pipとかvirtualenvの時代は過ぎ去っており、いまはpienvがイケていると直感を得た。 なのでpipenvについて以下の記事などを参考にこのテンプレを作った。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://pipenv-ja.readthedocs.io/ja/translate-ja/'&gt;Pipenv: 人間のためのPython開発ワークフロー — pipenv 2018.11.27.dev0 ドキュメント&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://www.natsukium.com/blog/2019-02-18/python/'&gt;Python環境構築ベストプラクティス2019 - ばいおいんふぉっぽいの！&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://qiita.com/youkidkk/items/b6a6e39ee3a109001c75'&gt;Windows + Python 3.6 + PipEnv + Visual Studio Code でPython開発環境 - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://qiita.com/tonluqclml/items/b09f4a5ed04ebcbd0af1'&gt;既存プロジェクトに pipenv を導入した方法 - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;予めLinterやらFormatterやらをdevPackageとして用意している。LinterにはPylintを用意したが、エラーの自動修正がないようなのでautopep8も用意した。&lt;/p&gt;&lt;p&gt;あと静的型付けに守られた世界で仕事できるように、MyPyも用意している。Better Bashとして使うときは大げさかもしれないけど、その時は単にMyPyを使わなかったらいいだけ。&lt;/p&gt;&lt;p&gt;このプロジェクトをコピペして、moduleのところをこねこねして使うイメージ。&lt;/p&gt;&lt;p&gt;Pythonのモジュールシステムについてはまだ理解が浅い。以下を参考にドキュメントをあたって、&lt;code&gt;&amp;#95;&amp;#95;init.py&amp;#95;&amp;#95;&lt;/code&gt;,&lt;code&gt;&amp;#95;&amp;#95;main.py&amp;#95;&amp;#95;&lt;/code&gt;のらへんを定型化した感じ。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://stackoverflow.com/questions/448271/what-is-init-py-for'&gt;python - What is &lt;b&gt;init&lt;/b&gt;.py for? - Stack Overflow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://stackoverflow.com/questions/4042905/what-is-main-py'&gt;python - What is &lt;b&gt;main&lt;/b&gt;.py? - Stack Overflow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ただ、&lt;code&gt;&amp;#95;&amp;#95;init.py&amp;#95;&amp;#95;&lt;/code&gt;は名前空間パッケージではなくていいようだし、よりモダンな方法に寄せたいので再検討するかな。単に今はわたしの知識がそこまで及んでない😭Pythonの言語仕様もちゃんと勉強したいのう。&lt;/p&gt;&lt;p&gt;いろいろ足りない点があるが、それらは今後改善できれば良いかな。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;moduleの名前をいろいろ変えないといけないのが面倒なので、なんか改善ができれば良。&lt;/li&gt;&lt;li&gt;テストがないので足したい。&lt;/li&gt;&lt;li&gt;なんかバッジ足したい。ビルドとか...&lt;/li&gt;&lt;li&gt;mypyで&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;&lt;p&gt;Python3たのしい。&lt;/p&gt;&lt;p&gt;せっかくテンプレを作ったので、なんかゴミスクリプトでも良いのでちまちま書いていきたい所存🤔&lt;/p&gt;&lt;p&gt;mypyについてもメモためていこ。&lt;/p&gt;
</description>
<pubDate>
Sat, 11 May 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-04-29-bias-amp-2issue
</guid>
<link>
http://krymtkts.github.io/posts/2019-04-29-bias-amp-2issue
</link>
<title>
BIAS Amp 2で保存したアンプが消える問題
</title>
<description>
&lt;p&gt;小ネタ。&lt;/p&gt;&lt;p&gt;個人的に、2019年からPositive Grid社のBIAS Amp miniを導入した。&lt;/p&gt;&lt;p&gt;&lt;a href='https://www.positivegrid.com/bias-mini-guitar/'&gt;BIAS MINI Guitar - Positive Grid&lt;/a&gt;&lt;/p&gt;&lt;p&gt;平たく言うと、ギターアンプの部品をいじくり回すことでサウンドメイクする、というアイデアのデジタルアンプ。そのサウンドメイクの幅の広さ、自分好みのサウンドを手探りする面白さから、とても気に入っている。&lt;/p&gt;&lt;p&gt;ただちょっと、バグが多いように思う。現時点で2つのバグらしい挙動を見つけている。&lt;/p&gt;&lt;h3 id=&quot;1.line&amp;#95;outが出力されない問題&quot;&gt;1.Line OUTが出力されない問題&lt;/h3&gt;&lt;p&gt;見出しの通りである。出る場合と出ない場合があるのか、パターンを絞り出せていない。&lt;/p&gt;&lt;p&gt;Line OUTはスタジオで試したときに気づいたので、まだすべての状況において出力がないのかは調べ尽くしていない。&lt;/p&gt;&lt;h3 id=&quot;2.保存したアンプが消える問題&quot;&gt;2.保存したアンプが消える問題&lt;/h3&gt;&lt;p&gt;購入したBIAS Amp miniには、同社のモデリングソフトウェアBIAS Amp 2が付属し、それで作ったアンプモデルをBIAS Amp miniに書き込むことができる。&lt;/p&gt;&lt;p&gt;今確認している範囲では、以下のパターンで書き込んだアンプが、消失する時がある。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;BIAS Amp 2でキャプチャしたアンプ(AMP MATCH)をTone Cloudで入手する&lt;/li&gt;&lt;li&gt;入手したアンプのパラメータを変える&lt;/li&gt;&lt;li&gt;BIAS Amp miniをdesconnect後にスキンを変更する&lt;/li&gt;&lt;li&gt;再度BIAS Amp miniを接続し、変更したアンプを書き込む&lt;/li&gt;&lt;li&gt;電源OFFから数時間後に消失&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;ただ、このパターンで2回消えたのだが、3回目の再現ができていないので別の変数が関与してそう🤔ややこしい。&lt;/p&gt;&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;&lt;p&gt;いずれも割とまじで困る系の障害なので、ちゃんと条件を調べた上でサポートに問い合わせしたいところだけど、まだ全然出来てない状態...&lt;/p&gt;&lt;p&gt;2の保存したアンプが消える問題は一応着手中。ライブ本番とかにモデルが消えてたらほんま笑い事じゃないからな...&lt;/p&gt;&lt;p&gt;しょうもないネタを書き記すことが増えてきたので、次回は仕事で経験を得た、2019年のイケてそうなPython開発環境構築について書きたい所存🤔&lt;/p&gt;
</description>
<pubDate>
Mon, 29 Apr 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-04-20_disable-touch-screen
</guid>
<link>
http://krymtkts.github.io/posts/2019-04-20_disable-touch-screen
</link>
<title>
Windows10でタッチスクリーンを無効化する
</title>
<description>
&lt;p&gt;小ネタ。&lt;/p&gt;&lt;p&gt;自機は、Razer Blade Stealth 2018のタッチスクリーン対応のやつだ。&lt;/p&gt;&lt;p&gt;ディスプレイを閉じた状態から再度開いたときに、たま～に謎に画面が連続タップされまくって制御不能になるポルターガイスト現象(偽)が起こることがあった。&lt;/p&gt;&lt;p&gt;それ以来タッチスクリーンの無効化をしているんやが、これがWindowsの大規模アップデートがあると設定が無効になって、都度再設定が必要になってる感じ🤔&lt;/p&gt;&lt;p&gt;最近ver1803が降りてきたことで再度必要になったので覚書。&lt;/p&gt;&lt;h3 id=&quot;手順&quot;&gt;手順&lt;/h3&gt;&lt;p&gt;&lt;a href='https://support.microsoft.com/ja-jp/help/4028019/windows-enable-and-disable-your-touchscreen-in-windows-10'&gt;Windows 10 でタッチスクリーンを有効/無効にする&lt;/a&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;デバイスマネージャを開く&lt;/li&gt;&lt;li&gt;HID準拠タッチスクリーンのデバイスを無効化する&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;THE END&lt;/p&gt;
</description>
<pubDate>
Sat, 20 Apr 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-04-14-add-a-badge
</guid>
<link>
http://krymtkts.github.io/posts/2019-04-14-add-a-badge
</link>
<title>
プロジェクトにバッジを貼ろう
</title>
<description>
&lt;p&gt;&lt;a href='https://www.powershellgallery.com/packages/MavenAutoCompletion/0.1'&gt;先日PowerShell Galleryにモジュールを公開した&lt;/a&gt;ついでに、プロジェクトのGitHubにバッジを貼ってみた。&lt;/p&gt;&lt;p&gt;のでその覚書。&lt;/p&gt;&lt;h3 id=&quot;バッジを貼ろう&quot;&gt;バッジを貼ろう&lt;/h3&gt;&lt;p&gt;なんかいろいろサービスがあるようだけど、わたしは&lt;a href='https://shields.io/'&gt;Shields.io: Quality metadata badges for open source projects&lt;/a&gt;にしてみた。&lt;/p&gt;&lt;p&gt;いろんなバッジが提供されてるみたいやし、利用するためのハードルが低い(とにかく楽な)のが良い。&lt;/p&gt;&lt;p&gt;PowerShell GalleryのDownload数を表示するバッチがあったので、それを利用してみた。&lt;/p&gt;&lt;p&gt;&lt;a href='https://shields.io/category/downloads'&gt;Shields.io: Quality metadata badges for open source projects&lt;/a&gt;&lt;/p&gt;&lt;p&gt;利用は簡単でURLを貼るだけ。なんかよそのOSSとか見ててたらもっと簡単な方法がありそうだが、普通のMarkdownで書いた。&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/krymtkts/MavenAutoCompletion/blob/master/README.md'&gt;MavenAutoCompletion/README.md at master · krymtkts/MavenAutoCompletion&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;md&quot;&gt;&amp;#91;!&amp;#91;PowerShell Gallery&amp;#93;&amp;#40;https://img.shields.io/powershellgallery/dt/MavenAutoCompletion.svg?style=flat-square&amp;#41;&amp;#93;&amp;#40;https://www.powershellgallery.com/packages/MavenAutoCompletion&amp;#41;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;コレがこうなる↓&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-04-14-badge/badge.png&quot; alt=&quot;バッジ&quot; /&gt;&lt;/p&gt;&lt;p&gt;いいね～😚&lt;/p&gt;&lt;p&gt;つかDLすっくねえ！！！&lt;/p&gt;&lt;p&gt;まあ自分のDLは、家、家リトライ、職場の3回だけで、残りの7回は世界のどこかで使われてるということがわかった。 ので良しとしよう🤔&lt;/p&gt;&lt;p&gt;こうなるともっとバッジをペタペタ貼りたくなりますな～。&lt;/p&gt;
</description>
<pubDate>
Sun, 14 Apr 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-04-07-lint-my-statement
</guid>
<link>
http://krymtkts.github.io/posts/2019-04-07-lint-my-statement
</link>
<title>
下手な文章をLintする
</title>
<description>
&lt;p&gt;転職してから2ヶ月の間、海外労働者の同僚から、日本語のドキュメントも英語のドキュメントもレビューコメントをいただいていてつらい。&lt;/p&gt;&lt;p&gt;英語だけならまだしろ、わしゃ日本語もろくに扱えん日本人なんかと思うと涙ちょちょぎれる次第であります。&lt;/p&gt;&lt;p&gt;なので自分の文章にLintをかけようと思った。&lt;/p&gt;&lt;h3 id=&quot;textlint&quot;&gt;textlint&lt;/h3&gt;&lt;p&gt;いつだったか文章のLinterについてググってたら、以下のようなものを見つけた。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/textlint/textlint'&gt;GitHub - textlint/textlint&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://qiita.com/azu/items/2c565a38df5ed4c9f4e1'&gt;Qiita - VS Codeでtextlintを使って文章をチェックする&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/textlint-ja/textlint-rule-preset-ja-technical-writing'&gt;textlint-ja/textlint-rule-preset-ja-technical-writing: 技術文書向けのtextlintルールプリセット&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;...すげえな！近い内に使えるようにしよう。と思ってから数ヶ月後、実務でまともな文章を書く能力が必要になるとわ...😭 というかvscode-textlintってホイル焼きで有名な方の作品なのですね。敬意を払うべきプロダクトだ。&lt;/p&gt;&lt;p&gt;以下にわたしのセットアップ手順を記す(実行はPowerShellだよ)。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;VSCodeでvscode-textlinを入れる&lt;/li&gt;&lt;li&gt;&lt;code&gt;npm i -g textlint textlint-rule-preset-ja-technical-writing&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;cd &amp;#126;&lt;/code&gt;で&lt;code&gt;textlint &amp;ndash;init&lt;/code&gt;してルールを書き込み&lt;/li&gt;&lt;li&gt;VSCodeでは設定ファイルを絶対パスで利用するからどうしたものか...(複数端末でSyncしてる関係で)&lt;ol&gt;&lt;li&gt;&lt;code&gt;&amp;#126;/,textlint&lt;/code&gt;にしたらユーザ名とか考えなくていいから、なんかいい😁&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;ついかパッケージ &lt;code&gt;npm i -g textlint-rule-date-weekday-mismatch textlint-rule-terminology textlint-rule-ginger&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;これで簡単なtypoは減らせるんじゃないかな。&lt;/p&gt;&lt;p&gt;お気に入りのルールは&lt;code&gt;textlint-rule-date-weekday-mismatch&lt;/code&gt;。これからのオレが曜日を間違うことはないぜええええ？(フラグ&lt;/p&gt;
</description>
<pubDate>
Sun, 07 Apr 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-04-02-pubslish-first-module-to-powershell-gallery
</guid>
<link>
http://krymtkts.github.io/posts/2019-04-02-pubslish-first-module-to-powershell-gallery
</link>
<title>
はじめてのPowerShell Galleryへの公開
</title>
<description>
&lt;p&gt;先日、自前のモジュールをPowerShell Galleryに公開したので、その時のメモを記す。&lt;/p&gt;&lt;p&gt;&lt;a href='https://www.powershellgallery.com/packages/MavenAutoCompletion/0.1'&gt;PowerShell Gallery | MavenAutoCompletion 0.1&lt;/a&gt;&lt;/p&gt;&lt;p&gt;PowerShell Galleryのアカウントを作るだとか、モジュールのAnalysisだとかはまた別で書こう。ここではモジュールの公開の部分だけ。&lt;/p&gt;&lt;h3 id=&quot;tl;dr&quot;&gt;TL;DR&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Poblish-Module&lt;/code&gt;は除外ファイル設定とかないから公開時には注意しましょう😭&lt;/p&gt;&lt;h3 id=&quot;モジュールの公開&quot;&gt;モジュールの公開&lt;/h3&gt;&lt;p&gt;以下の手順に従う。&lt;/p&gt;&lt;p&gt;&lt;a href='https://docs.microsoft.com/ja-jp/powershell/gallery/how-to/publishing-packages/publishing-a-package'&gt;アイテムの作成と公開 | Microsoft Docs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;事前にチェックしろよな！！！と書いてるのでそれに従い以下のコマンドを実行する&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;Publish-Module -Path &amp;quot;.\MavenAutoCompletion&amp;quot; -NugetAPIKey &amp;quot;キーは見せられないよ&amp;quot; -WhatIf -Verbose
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;途中で最新のNuGet入れるかい？と聞かれるのでそれはYesで。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ Publish-Module -Path &amp;quot;.\MavenAutoCompletion&amp;quot; -NugetAPIKey &amp;quot;キーは見せられないよ&amp;quot; -WhatIf -Verbose
VERBOSE: Acquiring providers for assembly: C:\Users\takatoshi\OneDrive\Documents\PowerShell\Modules\PackageManagement\1.3.1\coreclr\netstandard2.0\Microsoft.PackageManagement.NuGetProvider.dll
VERBOSE: Acquiring providers for assembly: C:\Users\takatoshi\OneDrive\Documents\PowerShell\Modules\PackageManagement\1.3.1\coreclr\netstandard2.0\Microsoft.PackageManagement.MetaProvider.PowerShell.dll
VERBOSE: Acquiring providers for assembly: C:\Users\takatoshi\OneDrive\Documents\PowerShell\Modules\PackageManagement\1.3.1\coreclr\netstandard2.0\Microsoft.PackageManagement.ArchiverProviders.dll
VERBOSE: Acquiring providers for assembly: C:\Users\takatoshi\OneDrive\Documents\PowerShell\Modules\PackageManagement\1.3.1\coreclr\netstandard2.0\Microsoft.PackageManagement.CoreProviders.dll

NuGet.exe is required to continue
This version of PowerShellGet requires minimum version '4.1.0' of NuGet.exe to publish an item to the
NuGet-based repositories. NuGet.exe must be available in
'C:\ProgramData\Microsoft\Windows\PowerShell\PowerShellGet\' or
'C:\Users\takatoshi\AppData\Local\Microsoft\Windows\PowerShell\PowerShellGet\', or under one of the
paths specified in PATH environment variable value. NuGet.exe can be downloaded from
https://aka.ms/psget-nugetexe. For more information, see https://aka.ms/installing-powershellget . Do
you want PowerShellGet to install the latest version of NuGet.exe now?
&amp;#91;Y&amp;#93; Yes  &amp;#91;N&amp;#93; No  &amp;#91;S&amp;#93; Suspend  &amp;#91;?&amp;#93; Help &amp;#40;default is &amp;quot;Y&amp;quot;&amp;#41;: y
VERBOSE: Installing NuGet.exe.
VERBOSE: GET https://aka.ms/psget-nugetexe with 0-byte payload
VERBOSE: received 5690456-byte response of content type application/x-msdownload
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'https://www.powershellgallery.com/api/v2/package/'.
VERBOSE: Module 'MavenAutoCompletion' was found in 'C:\Users\takatoshi\dev\powershell\MavenAutoCompletion'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'PSGallery'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/items/psscript/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/items/psscript/FindPackagesById&amp;#40;&amp;#41;?id='MavenAutoCompletion'' for ''.
VERBOSE: Total package yield:'0' for the specified package 'MavenAutoCompletion'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'PSGallery'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById&amp;#40;&amp;#41;?id='MavenAutoCompletion'' for ''.
VERBOSE: Total package yield:'0' for the specified package 'MavenAutoCompletion'.
What if: Performing the operation &amp;quot;Publish-Module&amp;quot; on target &amp;quot;Version '0.0.1' of module 'MavenAutoCompletion'&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;それらしいエラーも警告も出ないので、実行に移す。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ Publish-Module -Path &amp;quot;.\MavenAutoCompletion&amp;quot; -NugetAPIKey &amp;quot;キーは見せられないよ&amp;quot; -Verbose
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'https://www.powershellgallery.com/api/v2/package/'.
VERBOSE: Module 'MavenAutoCompletion' was found in 'C:\Users\takatoshi\dev\powershell\MavenAutoCompletion'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'PSGallery'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/items/psscript/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/items/psscript/FindPackagesById&amp;#40;&amp;#41;?id='MavenAutoCompletion'' for ''.
VERBOSE: Total package yield:'0' for the specified package 'MavenAutoCompletion'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'PSGallery'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById&amp;#40;&amp;#41;?id='MavenAutoCompletion'' for ''.
VERBOSE: Total package yield:'0' for the specified package 'MavenAutoCompletion'.
VERBOSE: Performing the operation &amp;quot;Publish-Module&amp;quot; on target &amp;quot;Version '0.0.1' of module 'MavenAutoCompletion'&amp;quot;.
VERBOSE: Pushing MavenAutoCompletion.0.0.1.nupkg to 'https://www.powershellgallery.com/api/v2/package/'...
  PUT https://www.powershellgallery.com/api/v2/package/
�x��: &amp;lt;licenseUrl&amp;gt; element will be deprecated, please consider switching to specifying the license in
the package. Learn more: https://aka.ms/deprecateLicenseUrl.
  Created https://www.powershellgallery.com/api/v2/package/ 3489ms
Your package was pushed.

VERBOSE: Successfully published module 'MavenAutoCompletion' to the module publish location 'https://www.powershellgallery.com/api/v2/package/'. Please allow few minutes for 'MavenAutoCompletion' to show up in the search results.
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&lt;p&gt; �x��: &lt;licenseUrl&gt; element will be deprecated, please consider switching to specifying the license in  the package. Learn more: https://aka.ms/deprecateLicenseUrl. &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;う、モジュールのマニフェストでdeprecatedな属性があるが...いけたっぽい。この文字化けはemojiかな(Win10 1809ではterminalでemoji化けがあるのは既知)&lt;/p&gt;&lt;h3 id=&quot;いけて...ない！&quot;&gt;いけて...ない！&lt;/h3&gt;&lt;p&gt;困ったことにイケてなかった...gitのオブジェクトとかそういうのまで全部publishedなかんじでまじで笑えねえ...とりあえずPowerShell Gallery上でリスト表示しないリクエストを出しておいたが笑えねえ😭&lt;/p&gt;&lt;p&gt;どうもこれはPowerShell Getの既知の問題？みたい...事前調査が足りてなかったぜえ...😭&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/PowerShell/PowerShellGet/issues/191'&gt;Ignore files when using &lt;code&gt;Publish-Module&lt;/code&gt; · Issue #191 · PowerShell/PowerShellGet&lt;/a&gt;&lt;/p&gt;&lt;p&gt;現状できることとしては、別にモジュールと同名のフォルダを作って、その中にpublishしたいファイルをコピーし、&lt;code&gt;Publish-Module&lt;/code&gt;を実行するしかないのではないかなと思う🤔&lt;/p&gt;&lt;p&gt;この際なので↑の取りなしでvr0.1として公開することにする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ Publish-Module -Path &amp;quot;.\MavenAutoCompletion&amp;quot; -NugetAPIKey &amp;quot;キーは見せられないよ&amp;quot; -Verbose
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'https://www.powershellgallery.com/api/v2/package/'.
VERBOSE: Module 'MavenAutoCompletion' was found in 'C:\Users\takatoshi\dev\powershell\MavenAutoCompletion\publish\MavenAutoCompletion'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'PSGallery'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/items/psscript/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/items/psscript/FindPackagesById&amp;#40;&amp;#41;?id='MavenAutoCompletion'' for ''.
VERBOSE: Total package yield:'0' for the specified package 'MavenAutoCompletion'.
VERBOSE: Repository details, Name = 'PSGallery', Location = 'https://www.powershellgallery.com/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'PSGallery'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById&amp;#40;&amp;#41;?id='MavenAutoCompletion'' for ''.
VERBOSE: Total package yield:'1' for the specified package 'MavenAutoCompletion'.
VERBOSE: Performing the operation &amp;quot;Publish-Module&amp;quot; on target &amp;quot;Version '0.1' of module 'MavenAutoCompletion'&amp;quot;.
VERBOSE: Pushing MavenAutoCompletion.0.1.0.nupkg to 'https://www.powershellgallery.com/api/v2/package/'...
  PUT https://www.powershellgallery.com/api/v2/package/
�x��: &amp;lt;licenseUrl&amp;gt; element will be deprecated, please consider switching to specifying the license in
the package. Learn more: https://aka.ms/deprecateLicenseUrl.
  Created https://www.powershellgallery.com/api/v2/package/ 4558ms
Your package was pushed.

VERBOSE: Successfully published module 'MavenAutoCompletion' to the module publish location 'https://www.powershellgallery.com/api/v2/package/'. Please allow few minutes for 'MavenAutoCompletion' to show up in the search results.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これによって一応無事にPowerShell Getでの公開はできたし、一旦コレでええか😅&lt;/p&gt;&lt;p&gt;今度非推奨になってる&lt;code&gt;&amp;lt;licenseUrl&amp;gt;&lt;/code&gt;を変えなあかんな。&lt;/p&gt;&lt;p&gt;ファイルコピって公開するためのスクリプトを起こしたので、次回はそれでやろうと思う。&lt;/p&gt;
</description>
<pubDate>
Tue, 02 Apr 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-03-31-win-openssh-is-gone
</guid>
<link>
http://krymtkts.github.io/posts/2019-03-31-win-openssh-is-gone
</link>
<title>
Windows10の更新でOpenSSHが逝った
</title>
<description>
&lt;p&gt;今更ながら、Raser Blade Stealth 2018にもWindows10 ver1809の更新が来てたようだった。&lt;/p&gt;&lt;p&gt;何の気なしに更新してみたところ、更新自体はすぐに終わってあっさりいったなと思っていたのだが、terminalを立ち上げると...&lt;/p&gt;&lt;h3 id=&quot;tl;dr&quot;&gt;TL;DR&lt;/h3&gt;&lt;p&gt;Windows10 ver1809のOpenSSHは既知のバグがあるのでOpenSSH Portableを入れ直そう。&lt;/p&gt;&lt;h3 id=&quot;まずssh&amp;#95;agentのサービスが無効になってた&quot;&gt;まずSSH Agentのサービスが無効になってた&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;Get-Process : Cannot find a process with the name &amp;quot;ssh-agent&amp;quot;. Verify the process name and call the cmdlet again.
At C:\Users\takatoshi\OneDrive\Documents\PowerShell\Microsoft.PowerShell&amp;#95;profile.ps1:40 char:8
+ if &amp;#40;! &amp;#40;Get-Process -Name 'ssh-agent'&amp;#41;&amp;#41; {
+        &amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;&amp;#126;
+ CategoryInfo          : ObjectNotFound: &amp;#40;ssh-agent:String&amp;#41; &amp;#91;Get-Process&amp;#93;, ProcessCommandException
+ FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.GetProcessCommand
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PowerShellのprofileで&lt;code&gt;ssh-agent&lt;/code&gt;のプロセスの存在を確認するようにしてたのだけど、Windowsの更新でサービスの自動実行が無効になってたようなのでこのエラーが...とりあえず今回は手動で自動実行するように変えて終わった。&lt;/p&gt;&lt;p&gt;あとどういうわけかわからないが、PC起動時のサービスの立ち上がりがめちゃくちゃ遅くなった気がする(体感)。PC起動後にすぐterminalを立ち上げると同じエラーがまだ出るから。根治させるにはprofileをいじらないといけないかな🤔&lt;/p&gt;&lt;p&gt;後述の問題に比べれば、こちらは楽しいアクシデント程度のものだ。&lt;/p&gt;&lt;h3 id=&quot;win10備え付けのopensshに既知のバグが有るとか云々&quot;&gt;Win10備え付けのOpenSSHに既知のバグが有るとか云々&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ git remote show origin
warning: agent returned different signature type ssh-rsa &amp;#40;expected rsa-sha2-512&amp;#41;
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↑この警告が常時出るようになった。むかつく💢&lt;/p&gt;&lt;p&gt;直さな...😭と思ってググってみると...&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/PowerShell/Win32-OpenSSH/issues/1263'&gt;ssh-agent: agent returned different signature type · Issue #1263 · PowerShell/Win32-OpenSSH&lt;/a&gt;&lt;/p&gt;&lt;p&gt;これの様子🤔&lt;/p&gt;&lt;p&gt;更に調べると、これマジIssueやなと思わざるを得ない... -&gt; &lt;a href='https://github.com/PowerShell/openssh-portable/pull/366'&gt;Fixes to ssh-agent issues by manojampalam · Pull Request #366 · PowerShell/openssh-portable&lt;/a&gt;&lt;/p&gt;&lt;p&gt;つまりはバグが直ったOpenSSH-Portbale入れないと解決しないってんでFAかな...キレそう❤&lt;/p&gt;&lt;p&gt;&lt;a href='https://blog.frankfu.com.au/2019/03/21/moving-from-windows-1809s-openssh-to-openssh-portable/'&gt;Moving from Windows 1809's OpenSSH to OpenSSH Portable&lt;/a&gt;&lt;/p&gt;&lt;p&gt;幸いにも同じ障害を解消したブログがあったので助かる🙏&lt;/p&gt;&lt;h4 id=&quot;処置する&quot;&gt;処置する&lt;/h4&gt;&lt;p&gt;&lt;a href='https://blog.frankfu.com.au/2019/03/21/moving-from-windows-1809s-openssh-to-openssh-portable/'&gt;Moving from Windows 1809's OpenSSH to OpenSSH Portable&lt;/a&gt;&lt;/p&gt;&lt;p&gt;この記事にそのまま従えばいける。&lt;/p&gt;&lt;p&gt;Windowsに関わる操作はPowerShell Coreではできないので、PowerShell CoreとWindowsPowerShellを使い分けた(WindowsPowerShellで全部やればいいものを...😅)&lt;/p&gt;&lt;p&gt;Coreでできる範囲から始める。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ Get-Service -Name ssh-agent | Stop-Service
$ sc.exe delete ssh-agent
&amp;#91;SC&amp;#93; DeleteService SUCCESS
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WindowsPowerShellでしかできない範囲&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ Remove-WindowsCapability -Online -Name &amp;quot;OpenSSH.Client&amp;#126;&amp;#126;&amp;#126;&amp;#126;0.0.1.0&amp;quot;


Path          :
Online        : True
RestartNeeded : False



$  Remove-WindowsCapability -Online -Name &amp;quot;OpenSSH.Server&amp;#126;&amp;#126;&amp;#126;&amp;#126;0.0.1.0&amp;quot;


Path          :
Online        : True
RestartNeeded : False
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Coreで続きをやる&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ choco install openssh --package-parameters=&amp;quot;/SSHAgentFeature&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Chocolatey v0.10.13
2 validations performed. 1 success&amp;#40;es&amp;#41;, 1 warning&amp;#40;s&amp;#41;, and 0 error&amp;#40;s&amp;#41;.

Validation Warnings:
 - A pending system reboot request has been detected, however, this is
   being ignored due to the current Chocolatey configuration.  If you
   want to halt when this occurs, then either set the global feature
   using:
     choco feature enable -name=exitOnRebootDetected
   or pass the option --exit-when-reboot-detected.

Installing the following packages:
openssh
By installing you accept licenses for the packages.
Progress: Downloading openssh 7.9.0.1... 100%

openssh v7.9.0.1 &amp;#91;Approved&amp;#93;
openssh package files install completed. Performing other installation steps.
The package openssh wants to run 'chocolateyinstall.ps1'.
Note: If you don't run this script, the installation will fail.
Note: To confirm automatically next time, use '-y' or consider:
choco feature enable -n allowGlobalConfirmation
Do you want to run the script?&amp;#40;&amp;#91;Y&amp;#93;es/&amp;#91;N&amp;#93;o/&amp;#91;P&amp;#93;rint&amp;#41;: y

Running on: Windows 10 Home, &amp;#40;Core&amp;#41;
Windows Version: 10.0.17763

&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;
&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;
This package is a Universal Installer and can ALSO install Win32-OpenSSH on
Nano, Server Core, Docker Containers and more WITHOUT using Chocolatey.

See the following for more details:
https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md
&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;
&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;&amp;#42;

/SSHAgentFeature was used, including SSH Agent Service.
Extracting C:\ProgramData\chocolatey\lib\openssh\tools\OpenSSH-Win64.zip to C:\Users\takatoshi\AppData\Local\Temp\chocolatey\OpenSSHTemp...
C:\Users\takatoshi\AppData\Local\Temp\chocolatey\OpenSSHTemp
Source files are internal to the package, checksums are not required nor checked.
C:\Program Files\OpenSSH-Win64
C:\Program Files\OpenSSH-Win64\FixHostFilePermissions.ps1
C:\Program Files\OpenSSH-Win64\FixUserFilePermissions.ps1
C:\Program Files\OpenSSH-Win64\install-sshd.ps1
C:\Program Files\OpenSSH-Win64\libcrypto.dll
C:\Program Files\OpenSSH-Win64\openssh-events.man
C:\Program Files\OpenSSH-Win64\OpenSSHUtils.psd1
C:\Program Files\OpenSSH-Win64\OpenSSHUtils.psm1
C:\Program Files\OpenSSH-Win64\scp.exe
C:\Program Files\OpenSSH-Win64\sftp-server.exe
C:\Program Files\OpenSSH-Win64\sftp.exe
C:\Program Files\OpenSSH-Win64\ssh-add.exe
C:\Program Files\OpenSSH-Win64\ssh-agent.exe
C:\Program Files\OpenSSH-Win64\ssh-keygen.exe
C:\Program Files\OpenSSH-Win64\ssh-keyscan.exe
C:\Program Files\OpenSSH-Win64\ssh-shellhost.exe
C:\Program Files\OpenSSH-Win64\ssh.exe
C:\Program Files\OpenSSH-Win64\sshd.exe
C:\Program Files\OpenSSH-Win64\sshd&amp;#95;config&amp;#95;default
C:\Program Files\OpenSSH-Win64\uninstall-sshd.ps1
C:\Program Files\OpenSSH-Win64\Set-SSHDefaultShell.ps1
PATH environment variable does not have C:\Program Files\OpenSSH-Win64 in it. Adding...
Updating machine environment variable TERM from &amp;quot;&amp;quot; to &amp;quot;&amp;quot;
&amp;#91;SC&amp;#93; SetServiceObjectSecurity SUCCESS
Starting SSH-Agent...

NEW VERSIONS OF SSH EXES:

FileName                                         FileVersion
--------                                         -----------
C:\Program Files\OpenSSH-Win64\scp.exe           7.9.0.0
C:\Program Files\OpenSSH-Win64\sftp-server.exe   7.9.0.0
C:\Program Files\OpenSSH-Win64\sftp.exe          7.9.0.0
C:\Program Files\OpenSSH-Win64\ssh-add.exe       7.9.0.0
C:\Program Files\OpenSSH-Win64\ssh-agent.exe     7.9.0.0
C:\Program Files\OpenSSH-Win64\ssh-keygen.exe    7.9.0.0
C:\Program Files\OpenSSH-Win64\ssh-keyscan.exe   7.9.0.0
C:\Program Files\OpenSSH-Win64\ssh-shellhost.exe 7.9.0.0
C:\Program Files\OpenSSH-Win64\ssh.exe           7.9.0.0
C:\Program Files\OpenSSH-Win64\sshd.exe          7.9.0.0




WARNING: You must start a new prompt, or use the command 'refreshenv' &amp;#40;provided by your chocolatey install&amp;#41; to re-read the environment for the tools to be available in this shell session.
Environment Vars &amp;#40;like PATH&amp;#41; have changed. Close/reopen your shell to
 see the changes &amp;#40;or in powershell/cmd.exe just type `refreshenv`&amp;#41;.
 The install of openssh was successful.
  Software installed to 'C:\Users\takatoshi\AppData\Local\Temp\chocolatey\OpenSSHTemp'

Chocolatey installed 1/1 packages.
 See the log for details &amp;#40;C:\ProgramData\chocolatey\logs\chocolatey.log&amp;#41;.
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ Get-Service ssh-agent

Status   Name               DisplayName
------   ----               -----------
Running  ssh-agent          ssh-agent
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ git config --global core.sshCommand &amp;quot;'C:\Program Files\OpenSSH-Win64\ssh.exe'&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;環境変数PATHを反映させてから、terminalでwariningが消えたのを確認&lt;/p&gt;&lt;h3 id=&quot;振り返り&quot;&gt;振り返り&lt;/h3&gt;&lt;p&gt;Windowsのでかい更新の際はちゃんと注意して取り組まなあかんな🤔(めんどい)&lt;/p&gt;&lt;p&gt;あとこれまた既知の別件なのだけど、ver1809だとterminalのemojiの表示が中点とかに化けるので、これもなんとかしたいわ...&lt;/p&gt;&lt;p&gt;Cmder/ConEmuじゃなくてWindows自体の問題みたい。&lt;/p&gt;
</description>
<pubDate>
Sun, 31 Mar 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-03-24_coverage-of-qunt-puppeteer
</guid>
<link>
http://krymtkts.github.io/posts/2019-03-24_coverage-of-qunt-puppeteer
</link>
<title>
QUnitでCIしたい その2
</title>
<description>
&lt;p&gt;&lt;a href='./2019-03-21_want-to-run-qunit-in-cli.md'&gt;前回&lt;/a&gt;、QUnitのユニットテストをpuppeteerでCLI実行できるようにした&lt;/p&gt;&lt;p&gt;今回はcode coverageを計測できるようにする。&lt;/p&gt;&lt;h3 id=&quot;前回のおさらい&quot;&gt;前回のおさらい&lt;/h3&gt;&lt;p&gt;puppeteerでJavaScriptのカバレッジを計測することができる(&lt;a href='https://developers.google.com/web/updates/2017/04/devtools-release-notes'&gt;What's New In DevTools (Chrome 59)  |  Web  |  Google Developers&lt;/a&gt;)のだが、現状利用している&lt;a href='https://www.npmjs.com/package/node-qunit-puppeteer'&gt;node-qunit-puppeteer&lt;/a&gt;だと、puppeteerの部分をモジュール外部から触れないので利用できなくて困った、ということろまで書いた。&lt;/p&gt;&lt;p&gt;理想ではユニットテストの実施と同時にカバレッジを計測したいところなのだが、一旦は簡単のために別々に、つまりユニットテストの実行後さらにカバレッジ取得のためにユニットテスを再実行する、というかたちで楽しようと考えた。ユニットテストの実行が軽いうちは2度実行したところで大した負荷にならないというのもあり。&lt;/p&gt;&lt;h3 id=&quot;やったこと&quot;&gt;やったこと&lt;/h3&gt;&lt;p&gt;これ↓&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/istanbuljs/puppeteer-to-istanbul'&gt;istanbuljs/puppeteer-to-istanbul: given coverage information output by puppeteer's API output a format consumable by Istanbul reports&lt;/a&gt;&lt;/p&gt;&lt;p&gt;puppeteerで計測したカバレッジをistanbul(nyc)で利用できる形に書き出すモジュールを使う。&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/krymtkts/qunit-trial/blob/master/test/run.js'&gt;すでにあるnode-qunit-puppeteerのテストランナー&lt;/a&gt;と一緒には使えないので、カバレッジ計測のためのスクリプトも新たに書く(無駄)。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;const pti = require&amp;#40;'puppeteer-to-istanbul'&amp;#41;;
const puppeteer = require&amp;#40;'puppeteer'&amp;#41;;
const path = require&amp;#40;'path'&amp;#41;;

&amp;#40;async &amp;#40;&amp;#41; =&amp;gt; {
  try {
    const browser = await puppeteer.launch&amp;#40;&amp;#41;;
    const page = await browser.newPage&amp;#40;&amp;#41;;

    await page.coverage.startJSCoverage&amp;#40;&amp;#41;;
    await page.goto&amp;#40;`file://${path.join&amp;#40;&amp;#95;&amp;#95;dirname, '/index.html'&amp;#41;}`&amp;#41;;
    const jsCoverage = await page.coverage.stopJSCoverage&amp;#40;&amp;#41;;

    pti.write&amp;#40;jsCoverage&amp;#41;;
    await browser.close&amp;#40;&amp;#41;;
  } catch &amp;#40;error&amp;#41; {
    console.error&amp;#40;error&amp;#41;;
  }
}&amp;#41;&amp;#40;&amp;#41;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これもほぼサンプルママで使えた。読み込ませるページのパスだけ工夫が必要ってだけ。&lt;/p&gt;&lt;p&gt;あとはカバレッジ計測に成功したらnycのレポート作成を実行するだけでおｋ。これをnpmのタスクにする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;node test/coverage.js &amp;amp;&amp;amp; nyc report --reporter=html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでページを開いたときに読み込まれるJSのカバレッジを計測できた。ただしこのままだと、QUnitやユニットテスト自体のカバレッジも含まれてしまうので、仕事のCIで使う場合なんかには特定のファイルのカバレッジだけを見るか、あるいは除外設定があればいいのだけど。&lt;/p&gt;&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;&lt;p&gt;また今回試した内容は以下のrepoに反映してある&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/krymtkts/qunit-trial'&gt;krymtkts/qunit-trial: sandbox to enhance legacy QUnit test.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2回ユニットテストを実行していて無駄感があるので、node-qunit-puppeteerに手を入れることも検討していいかも🤔&lt;/p&gt;&lt;p&gt;続く&lt;/p&gt;
</description>
<pubDate>
Sun, 24 Mar 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-03-21_want-to-run-qunit-in-cli
</guid>
<link>
http://krymtkts.github.io/posts/2019-03-21_want-to-run-qunit-in-cli
</link>
<title>
QUnitでCIしたい その1
</title>
<description>
&lt;p&gt;2月に転職した。&lt;/p&gt;&lt;p&gt;へーしゃでの初めての仕事はフロントエンド、と言ってもトラッキングに関わる部分である。&lt;/p&gt;&lt;p&gt;生のES5で書かれてて&lt;a href='https://github.com/google/closure-compiler'&gt;Google Closure Compiler&lt;/a&gt;でminifyされてるようなのだけど、困ったことにユニットテストがない様子？ どこそこのチームで作ってたことがあったらしいという情報は得たので、それをCIに組み込めたらいいかなと思っていた。&lt;/p&gt;&lt;p&gt;蓋を開けてみると、2年間ほどメンテされていない死んだユニットテストで、最新のコードベースに対するテストでなかった(テストコードと同ディレクトリにテスト対象のコードがコピられてて)🤔&lt;/p&gt;&lt;p&gt;CIに組み込まれないテストは陳腐化すると云うが、まさかそれを身をもって実感することになろうとは思わなんだ。&lt;/p&gt;&lt;p&gt;&lt;del&gt;仕方ないので&lt;/del&gt;既存の資産を活かすためにも、テスティングフレームワークなど既存のものを利用して少なくともCIに組み込めるところまでは持っていこうと考えた。CIに組み込まれればビルド失敗の通知を恐れてみんなユニットテストを書くのをサボらなくなる。&lt;/p&gt;&lt;p&gt;というわけで、許可を取り付けた上で仕事の合間を縫ってユニットテストの整備を行うことにした。&lt;/p&gt;&lt;h3 id=&quot;現状把握と展望&quot;&gt;現状把握と展望&lt;/h3&gt;&lt;p&gt;ユニットテストは&lt;a href='https://qunitjs.com/'&gt;QUnit&lt;/a&gt;で書かれていて、モッキングフレームワークには&lt;a href='https://sinonjs.org/'&gt;Sinon.JS&lt;/a&gt;が使われていた。&lt;/p&gt;&lt;p&gt;linterは&lt;a href='https://eslint.org/'&gt;ESLint - Pluggable JavaScript linter&lt;/a&gt;を用意してあるようなのだけどどうも長らく利用されてなかったようで、試しに実行すると41件のautofix可能なエラーが...😅&lt;/p&gt;&lt;p&gt;ブラウザで&lt;code&gt;index.html&lt;/code&gt;を開くことでテストが実行されるタイプのやつで、CLIでの実行は用意されてなかった。 プロダクトコードが&lt;code&gt;window&lt;/code&gt;オブジェクトに依存してることもあって、QUnitのテストをヘッドレスブラウザで実行するのが良さげかな。&lt;/p&gt;&lt;p&gt;ここにカバレッジ計測も追加して、最終的にはプルリクをトリガーにした自動テストがCIに組み込まれるのが良さげかなと思う。&lt;/p&gt;&lt;h3 id=&quot;やったこと＆やらなかったこと&quot;&gt;やったこと＆やらなかったこと&lt;/h3&gt;&lt;p&gt;とりあえずカバレッジは置いといて今あるQUnitのCLI実行を優先した。&lt;/p&gt;&lt;p&gt;nodeでのカバレッジ計測に関しては知らないことが多かったので軽く下調べだけした。 istabulというやつがnode界隈で強かったみたいだが、こいつは2年ほどメンテされてなくて、後続の&lt;a href='https://www.npmjs.com/package/nyc'&gt;nyc - npm&lt;/a&gt;と言うやつがみつかる👀 puppeteerもそれ単体でカバレッジが測れるようす↓&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://www.philkrie.me/2018/07/04/extracting-coverage.html'&gt;Using Puppeteer to Extract Code Coverage Data from Chrome Dev Tools&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/istanbuljs/puppeteer-to-istanbul'&gt;istanbuljs/puppeteer-to-istanbul: given coverage information output by puppeteer's API output a format consumable by Istanbul reports&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;やったこと&quot;&gt;やったこと&lt;/h4&gt;&lt;p&gt;まず元々あるQUnitもそのまま使えないとブラウザで見つつの開発の利便性も下がっちゃうので、そこは担保したかった。 (&lt;code&gt;window&lt;/code&gt;オブジェクトがないのでCommonJSは死ぬ)&lt;/p&gt;&lt;p&gt;&lt;a href='https://www.npmjs.com/package/qunit-puppeteer'&gt;qunit-puppeteer - npm&lt;/a&gt;は簡単にテスト実行できて楽だったのだけど、テストのurlを絶対パスで指定しないといけず＆自分でURLをこねくり回せなくて却下。&lt;/p&gt;&lt;p&gt;なのでそのへん柔軟な&lt;a href='https://www.npmjs.com/package/node-qunit-puppeteer'&gt;node-qunit-puppeteer - npm&lt;/a&gt;しか選択肢が残らなかったわけだ。&lt;/p&gt;&lt;p&gt;とりま&lt;code&gt;eslint&lt;/code&gt;だけあるからソイツはそのままに、QUnitをheadless browser実行するためのmoduleだけ足す。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;npm install --save-dev node-qunit-puppeteer
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;は以下のような感じにした&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;  &amp;quot;scripts&amp;quot;: {
    &amp;quot;lint&amp;quot;: &amp;quot;eslint --fix ./&amp;quot;,
    &amp;quot;test&amp;quot;: &amp;quot;node test/run.js&amp;quot;
  },
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;lint&lt;/code&gt;はメンテされてなかった関係で40件くらいのerrorがあるけど、最終的には実行できるようになる(ハズな)ので用意しておく。&lt;/p&gt;&lt;p&gt;&lt;code&gt;test/run.js&lt;/code&gt;は以下の通りで、&lt;a href='https://github.com/ameshkov/node-qunit-puppeteer'&gt;ameshkov/node-qunit-puppeteer: A simple node module for running qunit tests with headless Chromium&lt;/a&gt;のExampleとほぼ同じで行ける便利さ。しびれる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;#! /usr/bin/env node
// almost the same as the sample code :-p
// https://github.com/ameshkov/node-qunit-puppeteer

const path = require&amp;#40;'path'&amp;#41;;
const { runQunitPuppeteer, printOutput } = require&amp;#40;'node-qunit-puppeteer'&amp;#41;;

const qunitArgs = {
  targetUrl: `file://${path.join&amp;#40;&amp;#95;&amp;#95;dirname, '/index.html'&amp;#41;}`,
  redirectConsole: true
};

runQunitPuppeteer&amp;#40;qunitArgs&amp;#41;
  .then&amp;#40;&amp;#40;result&amp;#41; =&amp;gt; {
    // Print the test result to the output
    printOutput&amp;#40;result, console&amp;#41;;
    if &amp;#40;result.stats.failed &amp;gt; 0&amp;#41; {
      // Handle the failed test run
      // currently notghing to do.
    }
  }&amp;#41;
  .catch&amp;#40;&amp;#40;ex&amp;#41; =&amp;gt; {
    console.error&amp;#40;ex&amp;#41;;
  }&amp;#41;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;実行結果は以下のような感じで出る。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$ npm run test

&amp;gt; qunit@1.0.0 test C:\Users\takatoshi\dev\javascript\qunit
&amp;gt; node test/run.js

Module: hello module
  hello test
    Status: success
    Passed assertions: 2 of 2
    Elapsed: 1ms

Test run result: success
Total tests: 1
  Assertions: 2
  Passed assertions: 2
  Failed assertions: 0
  Elapsed: 8ms
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;と、ここまで書いた内容を会社のコードに組み込んだのだけど、会社で作ったものは外に出せないので模倣したゴミプロジェクトを作った↓&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/krymtkts/qunit-trial'&gt;krymtkts/qunit-trial: sandbox to enhance legacy QUnit test.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;今後いじくり回すときの砂場としても使おうかな。&lt;/p&gt;&lt;h4 id=&quot;あとやりたいこと&quot;&gt;あとやりたいこと&lt;/h4&gt;&lt;p&gt;ユニットテストだけあってカバレッジ計測がないのはちょっとアレなので早々に追加したい所存🤔&lt;/p&gt;&lt;p&gt;そもそもユニットテスト書くにしてもどの経路通ったとかわからないのでテスト品質を保証しづらく、コード網羅率 Level C1を100%にしたいマンなのもありカバレッジ必須。&lt;/p&gt;&lt;p&gt;でも事前に調べてたnycやpuppeteerでの方法だと、現状のnode-qunit-puppeteerを使ったテストのカバレッジ計測できなさそう...&lt;/p&gt;&lt;p&gt;もう少し調べる必要がありそう😳&lt;/p&gt;&lt;p&gt;続く&lt;/p&gt;
</description>
<pubDate>
Thu, 21 Mar 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-02-24_lein-ring-server-error
</guid>
<link>
http://krymtkts.github.io/posts/2019-02-24_lein-ring-server-error
</link>
<title>
lein ringでエラーが発生した
</title>
<description>
&lt;p&gt;&lt;a href='./2019-02-20-instead-of-ping.md'&gt;前回&lt;/a&gt;以下のコメントを残した&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt; この記事をしたためておるときに&lt;code&gt;lein ring server&lt;/code&gt;でエラーが出るようになってたのを解消したので、メモがてら次回に記す。 &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;どのような状況だったかを以下に記すと&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;lein ring server
clojure.lang.Compiler$CompilerException: Syntax error macroexpanding clojure.core/fn at &amp;#40;clojure/core/unify.clj:83:18&amp;#41;.
#:clojure.error{:phase :macro-syntax-check, :line 83, :column 18, :source &amp;quot;clojure/core/unify.clj&amp;quot;, :symbol clojure.core/fn}
 at clojure.lang.Compiler.checkSpecs &amp;#40;Compiler.java:6971&amp;#41;
    clojure.lang.Compiler.macroexpand1 &amp;#40;Compiler.java:6987&amp;#41;
    clojure.lang.Compiler.analyzeSeq &amp;#40;Compiler.java:7092&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6789&amp;#41;
    clojure.lang.Compiler.analyzeSeq &amp;#40;Compiler.java:7094&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6789&amp;#41;
    clojure.lang.Compiler.access$300 &amp;#40;Compiler.java:38&amp;#41;
    clojure.lang.Compiler$DefExpr$Parser.parse &amp;#40;Compiler.java:596&amp;#41;
    clojure.lang.Compiler.analyzeSeq &amp;#40;Compiler.java:7106&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6789&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6745&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7180&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:421&amp;#41;
    clojure.core.contracts.impl.transformers$eval690$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;691.invoke &amp;#40;transformers.clj:1&amp;#41;
    clojure.core.contracts.impl.transformers$eval690.invokeStatic &amp;#40;transformers.clj:1&amp;#41;
    clojure.core.contracts.impl.transformers$eval690.invoke &amp;#40;transformers.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    leinjacker.defconstrainedfn$eval684$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;685.invoke &amp;#40;defconstrainedfn.clj:1&amp;#41;
    leinjacker.defconstrainedfn$eval684.invokeStatic &amp;#40;defconstrainedfn.clj:1&amp;#41;
    leinjacker.defconstrainedfn$eval684.invoke &amp;#40;defconstrainedfn.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:669&amp;#41;
    clojure.core$use.invokeStatic &amp;#40;core.clj:6093&amp;#41;
    clojure.core$use.doInvoke &amp;#40;core.clj:6093&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    leinjacker.deps$eval676$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;677.invoke &amp;#40;deps.clj:1&amp;#41;
    leinjacker.deps$eval676.invokeStatic &amp;#40;deps.clj:1&amp;#41;
    leinjacker.deps$eval676.invoke &amp;#40;deps.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:436&amp;#41;
    leiningen.ring.server$eval668$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;669.invoke &amp;#40;server.clj:1&amp;#41;
    leiningen.ring.server$eval668.invokeStatic &amp;#40;server.clj:1&amp;#41;
    leiningen.ring.server$eval668.invoke &amp;#40;server.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:669&amp;#41;
    clojure.core$use.invokeStatic &amp;#40;core.clj:6093&amp;#41;
    clojure.core$use.doInvoke &amp;#40;core.clj:6093&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:551&amp;#41;
    leiningen.ring$eval662$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;663.invoke &amp;#40;ring.clj:1&amp;#41;
    leiningen.ring$eval662.invokeStatic &amp;#40;ring.clj:1&amp;#41;
    leiningen.ring$eval662.invoke &amp;#40;ring.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invokeStatic &amp;#40;utils.clj:102&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invoke &amp;#40;utils.clj:95&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invokeStatic &amp;#40;utils.clj:105&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invoke &amp;#40;utils.clj:95&amp;#41;
    leiningen.core.main$lookup&amp;#95;task&amp;#95;var.invokeStatic &amp;#40;main.clj:69&amp;#41;
    leiningen.core.main$lookup&amp;#95;task&amp;#95;var.invoke &amp;#40;main.clj:65&amp;#41;
    leiningen.core.main$pass&amp;#95;through&amp;#95;help&amp;#95;QMARK&amp;#95;.invokeStatic &amp;#40;main.clj:79&amp;#41;
    leiningen.core.main$pass&amp;#95;through&amp;#95;help&amp;#95;QMARK&amp;#95;.invoke &amp;#40;main.clj:73&amp;#41;
    leiningen.core.main$task&amp;#95;args.invokeStatic &amp;#40;main.clj:82&amp;#41;
    leiningen.core.main$task&amp;#95;args.invoke &amp;#40;main.clj:81&amp;#41;
    leiningen.core.main$resolve&amp;#95;and&amp;#95;apply.invokeStatic &amp;#40;main.clj:339&amp;#41;
    leiningen.core.main$resolve&amp;#95;and&amp;#95;apply.invoke &amp;#40;main.clj:336&amp;#41;
    leiningen.core.main$&amp;#95;main$fn&amp;#95;&amp;#95;6771.invoke &amp;#40;main.clj:449&amp;#41;
    leiningen.core.main$&amp;#95;main.invokeStatic &amp;#40;main.clj:439&amp;#41;
    leiningen.core.main$&amp;#95;main.doInvoke &amp;#40;main.clj:436&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.lang.Var.applyTo &amp;#40;Var.java:705&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:665&amp;#41;
    clojure.main$main&amp;#95;opt.invokeStatic &amp;#40;main.clj:491&amp;#41;
    clojure.main$main&amp;#95;opt.invoke &amp;#40;main.clj:487&amp;#41;
    clojure.main$main.invokeStatic &amp;#40;main.clj:598&amp;#41;
    clojure.main$main.doInvoke &amp;#40;main.clj:561&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.lang.Var.applyTo &amp;#40;Var.java:705&amp;#41;
    clojure.main.main &amp;#40;main.java:37&amp;#41;
Caused by: clojure.lang.ExceptionInfo: Call to clojure.core/fn did not conform to spec.
#:clojure.spec.alpha{:problems &amp;#40;{:path &amp;#91;:fn-tail :arity-1 :params&amp;#93;, :pred clojure.core/vector?, :val clojure.core.unify/var-unify, :via &amp;#91;:clojure.core.specs.alpha/params+body :clojure.core.specs.alpha/param-list :clojure.core.specs.alpha/param-list&amp;#93;, :in &amp;#91;0&amp;#93;} {:path &amp;#91;:fn-tail :arity-n&amp;#93;, :pred &amp;#40;clojure.core/fn &amp;#91;%&amp;#93; &amp;#40;clojure.core/or &amp;#40;clojure.core/nil? %&amp;#41; &amp;#40;clojure.core/sequential? %&amp;#41;&amp;#41;&amp;#41;, :val clojure.core.unify/var-unify, :via &amp;#91;:clojure.core.specs.alpha/params+body :clojure.core.specs.alpha/params+body&amp;#93;, :in &amp;#91;0&amp;#93;}&amp;#41;,
:spec #object&amp;#91;clojure.spec.alpha$regex&amp;#95;spec&amp;#95;impl$reify&amp;#95;&amp;#95;2509 0x4f379769 &amp;quot;clojure.spec.alpha$regex&amp;#95;spec&amp;#95;impl$reify&amp;#95;&amp;#95;2509@4f379769&amp;quot;&amp;#93;, :value &amp;#40;clojure.core.unify/var-unify &amp;#91;G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;801 G&amp;#95;&amp;#95;802 G&amp;#95;&amp;#95;803&amp;#93; &amp;#40;clojure.core/if-let &amp;#91;vb&amp;#95;&amp;#95;793&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; &amp;#40;G&amp;#95;&amp;#95;803 G&amp;#95;&amp;#95;801&amp;#41;&amp;#93; &amp;#40;clojure.core.unify/garner-unifiers G&amp;#95;&amp;#95;800 vb&amp;#95;&amp;#95;793&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; G&amp;#95;&amp;#95;802 G&amp;#95;&amp;#95;803&amp;#41; &amp;#40;clojure.core/if-let &amp;#91;vexpr&amp;#95;&amp;#95;794&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; &amp;#40;clojure.core/and &amp;#40;G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;802&amp;#41; &amp;#40;G&amp;#95;&amp;#95;803 G&amp;#95;&amp;#95;802&amp;#41;&amp;#41;&amp;#93; &amp;#40;clojure.core.unify/garner-unifiers G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;801 vexpr&amp;#95;&amp;#95;794&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; G&amp;#95;&amp;#95;803&amp;#41; &amp;#40;if &amp;#40;clojure.core.unify/occurs? G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;801 G&amp;#95;&amp;#95;802 G&amp;#95;&amp;#95;803&amp;#41; &amp;#40;throw &amp;#40;java.lang.IllegalStateException. &amp;#40;clojure.core/str &amp;quot;Cycle found in the path &amp;quot; G&amp;#95;&amp;#95;802&amp;#41;&amp;#41;&amp;#41; &amp;#40;clojure.core.unify/bind-phase G&amp;#95;&amp;#95;803 G&amp;#95;&amp;#95;801 G&amp;#95;&amp;#95;802&amp;#41;&amp;#41;&amp;#41;&amp;#41;&amp;#41;, :args &amp;#40;clojure.core.unify/var-unify &amp;#91;G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;801 G&amp;#95;&amp;#95;802 G&amp;#95;&amp;#95;803&amp;#93; &amp;#40;clojure.core/if-let &amp;#91;vb&amp;#95;&amp;#95;793&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; &amp;#40;G&amp;#95;&amp;#95;803 G&amp;#95;&amp;#95;801&amp;#41;&amp;#93; &amp;#40;clojure.core.unify/garner-unifiers G&amp;#95;&amp;#95;800 vb&amp;#95;&amp;#95;793&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; G&amp;#95;&amp;#95;802 G&amp;#95;&amp;#95;803&amp;#41; &amp;#40;clojure.core/if-let &amp;#91;vexpr&amp;#95;&amp;#95;794&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; &amp;#40;clojure.core/and &amp;#40;G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;802&amp;#41; &amp;#40;G&amp;#95;&amp;#95;803 G&amp;#95;&amp;#95;802&amp;#41;&amp;#41;&amp;#93; &amp;#40;clojure.core.unify/garner-unifiers G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;801 vexpr&amp;#95;&amp;#95;794&amp;#95;&amp;#95;auto&amp;#95;&amp;#95; G&amp;#95;&amp;#95;803&amp;#41; &amp;#40;if &amp;#40;clojure.core.unify/occurs? G&amp;#95;&amp;#95;800 G&amp;#95;&amp;#95;801 G&amp;#95;&amp;#95;802 G&amp;#95;&amp;#95;803&amp;#41; &amp;#40;throw &amp;#40;java.lang.IllegalStateException. &amp;#40;clojure.core/str &amp;quot;Cycle found in the path &amp;quot; G&amp;#95;&amp;#95;802&amp;#41;&amp;#41;&amp;#41; &amp;#40;clojure.core.unify/bind-phase G&amp;#95;&amp;#95;803 G&amp;#95;&amp;#95;801 G&amp;#95;&amp;#95;802&amp;#41;&amp;#41;&amp;#41;&amp;#41;&amp;#41;}
 at clojure.spec.alpha$macroexpand&amp;#95;check.invokeStatic &amp;#40;alpha.clj:705&amp;#41;
    clojure.spec.alpha$macroexpand&amp;#95;check.invoke &amp;#40;alpha.clj:697&amp;#41;
    clojure.lang.AFn.applyToHelper &amp;#40;AFn.java:156&amp;#41;
    clojure.lang.AFn.applyTo &amp;#40;AFn.java:144&amp;#41;
    clojure.lang.Var.applyTo &amp;#40;Var.java:705&amp;#41;
    clojure.lang.Compiler.checkSpecs &amp;#40;Compiler.java:6969&amp;#41;
    clojure.lang.Compiler.macroexpand1 &amp;#40;Compiler.java:6987&amp;#41;
    clojure.lang.Compiler.analyzeSeq &amp;#40;Compiler.java:7092&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6789&amp;#41;
    clojure.lang.Compiler.analyzeSeq &amp;#40;Compiler.java:7094&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6789&amp;#41;
    clojure.lang.Compiler.access$300 &amp;#40;Compiler.java:38&amp;#41;
    clojure.lang.Compiler$DefExpr$Parser.parse &amp;#40;Compiler.java:596&amp;#41;
    clojure.lang.Compiler.analyzeSeq &amp;#40;Compiler.java:7106&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6789&amp;#41;
    clojure.lang.Compiler.analyze &amp;#40;Compiler.java:6745&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7180&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:421&amp;#41;
    clojure.core.contracts.impl.transformers$eval690$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;691.invoke &amp;#40;transformers.clj:1&amp;#41;
    clojure.core.contracts.impl.transformers$eval690.invokeStatic &amp;#40;transformers.clj:1&amp;#41;
    clojure.core.contracts.impl.transformers$eval690.invoke &amp;#40;transformers.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    leinjacker.defconstrainedfn$eval684$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;685.invoke &amp;#40;defconstrainedfn.clj:1&amp;#41;
    leinjacker.defconstrainedfn$eval684.invokeStatic &amp;#40;defconstrainedfn.clj:1&amp;#41;
    leinjacker.defconstrainedfn$eval684.invoke &amp;#40;defconstrainedfn.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:669&amp;#41;
    clojure.core$use.invokeStatic &amp;#40;core.clj:6093&amp;#41;
    clojure.core$use.doInvoke &amp;#40;core.clj:6093&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    leinjacker.deps$eval676$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;677.invoke &amp;#40;deps.clj:1&amp;#41;
    leinjacker.deps$eval676.invokeStatic &amp;#40;deps.clj:1&amp;#41;
    leinjacker.deps$eval676.invoke &amp;#40;deps.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:436&amp;#41;
    leiningen.ring.server$eval668$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;669.invoke &amp;#40;server.clj:1&amp;#41;
    leiningen.ring.server$eval668.invokeStatic &amp;#40;server.clj:1&amp;#41;
    leiningen.ring.server$eval668.invoke &amp;#40;server.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:669&amp;#41;
    clojure.core$use.invokeStatic &amp;#40;core.clj:6093&amp;#41;
    clojure.core$use.doInvoke &amp;#40;core.clj:6093&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:551&amp;#41;
    leiningen.ring$eval662$loading&amp;#95;&amp;#95;6706&amp;#95;&amp;#95;auto&amp;#95;&amp;#95;&amp;#95;&amp;#95;663.invoke &amp;#40;ring.clj:1&amp;#41;
    leiningen.ring$eval662.invokeStatic &amp;#40;ring.clj:1&amp;#41;
    leiningen.ring$eval662.invoke &amp;#40;ring.clj:1&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7176&amp;#41;
    clojure.lang.Compiler.eval &amp;#40;Compiler.java:7165&amp;#41;
    clojure.lang.Compiler.load &amp;#40;Compiler.java:7635&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:381&amp;#41;
    clojure.lang.RT.loadResourceScript &amp;#40;RT.java:372&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:463&amp;#41;
    clojure.lang.RT.load &amp;#40;RT.java:428&amp;#41;
    clojure.core$load$fn&amp;#95;&amp;#95;6824.invoke &amp;#40;core.clj:6126&amp;#41;
    clojure.core$load.invokeStatic &amp;#40;core.clj:6125&amp;#41;
    clojure.core$load.doInvoke &amp;#40;core.clj:6109&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    clojure.core$load&amp;#95;one.invokeStatic &amp;#40;core.clj:5908&amp;#41;
    clojure.core$load&amp;#95;one.invoke &amp;#40;core.clj:5903&amp;#41;
    clojure.core$load&amp;#95;lib$fn&amp;#95;&amp;#95;6765.invoke &amp;#40;core.clj:5948&amp;#41;
    clojure.core$load&amp;#95;lib.invokeStatic &amp;#40;core.clj:5947&amp;#41;
    clojure.core$load&amp;#95;lib.doInvoke &amp;#40;core.clj:5928&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:142&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$load&amp;#95;libs.invokeStatic &amp;#40;core.clj:5985&amp;#41;
    clojure.core$load&amp;#95;libs.doInvoke &amp;#40;core.clj:5969&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:667&amp;#41;
    clojure.core$require.invokeStatic &amp;#40;core.clj:6007&amp;#41;
    clojure.core$require.doInvoke &amp;#40;core.clj:6007&amp;#41;
    clojure.lang.RestFn.invoke &amp;#40;RestFn.java:408&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invokeStatic &amp;#40;utils.clj:102&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invoke &amp;#40;utils.clj:95&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invokeStatic &amp;#40;utils.clj:105&amp;#41;
    leiningen.core.utils$require&amp;#95;resolve.invoke &amp;#40;utils.clj:95&amp;#41;
    leiningen.core.main$lookup&amp;#95;task&amp;#95;var.invokeStatic &amp;#40;main.clj:69&amp;#41;
    leiningen.core.main$lookup&amp;#95;task&amp;#95;var.invoke &amp;#40;main.clj:65&amp;#41;
    leiningen.core.main$pass&amp;#95;through&amp;#95;help&amp;#95;QMARK&amp;#95;.invokeStatic &amp;#40;main.clj:79&amp;#41;
    leiningen.core.main$pass&amp;#95;through&amp;#95;help&amp;#95;QMARK&amp;#95;.invoke &amp;#40;main.clj:73&amp;#41;
    leiningen.core.main$task&amp;#95;args.invokeStatic &amp;#40;main.clj:82&amp;#41;
    leiningen.core.main$task&amp;#95;args.invoke &amp;#40;main.clj:81&amp;#41;
    leiningen.core.main$resolve&amp;#95;and&amp;#95;apply.invokeStatic &amp;#40;main.clj:339&amp;#41;
    leiningen.core.main$resolve&amp;#95;and&amp;#95;apply.invoke &amp;#40;main.clj:336&amp;#41;
    leiningen.core.main$&amp;#95;main$fn&amp;#95;&amp;#95;6771.invoke &amp;#40;main.clj:449&amp;#41;
    leiningen.core.main$&amp;#95;main.invokeStatic &amp;#40;main.clj:439&amp;#41;
    leiningen.core.main$&amp;#95;main.doInvoke &amp;#40;main.clj:436&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.lang.Var.applyTo &amp;#40;Var.java:705&amp;#41;
    clojure.core$apply.invokeStatic &amp;#40;core.clj:665&amp;#41;
    clojure.main$main&amp;#95;opt.invokeStatic &amp;#40;main.clj:491&amp;#41;
    clojure.main$main&amp;#95;opt.invoke &amp;#40;main.clj:487&amp;#41;
    clojure.main$main.invokeStatic &amp;#40;main.clj:598&amp;#41;
    clojure.main$main.doInvoke &amp;#40;main.clj:561&amp;#41;
    clojure.lang.RestFn.applyTo &amp;#40;RestFn.java:137&amp;#41;
    clojure.lang.Var.applyTo &amp;#40;Var.java:705&amp;#41;
    clojure.main.main &amp;#40;main.java:37&amp;#41;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;lein ring server&lt;/code&gt;がエラーを吐くようになった。&lt;/p&gt;&lt;p&gt;&lt;code&gt;lein help&lt;/code&gt;で見てみてもringだけエラーが出てる&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;lein help
Leiningen is a tool for working with Clojure projects.

Several tasks are available:
change              Rewrite project.clj with f applied to the value at key-or-path.
check               Check syntax and warn on reflection.
classpath           Write the classpath of the current project to output-file.
clean               Removes all files from paths in clean-targets for a project
compile             Compile Clojure source into .class files.
deploy              Deploy jar and pom to remote repository.
deps                Show details about dependencies.
do                  Higher-order task to perform other tasks in succession.
help                Display a list of tasks or help for a given task or subtask.
install             Install jar and pom to the local repository; typically &amp;#126;/.m2.
jar                 Package up all the project's files into a jar file.
javac               Compile Java source files.
new                 Generate scaffolding for a new project based on a template.
plugin              DEPRECATED. Please use the :user profile instead.
pom                 Write a pom.xml file to disk for Maven interoperability.
release             Perform release tasks.
repl                Start a repl session either with the current project or standalone.
retest              Run only the test namespaces which failed last time around.
leiningen.ring  Problem loading: Syntax error macroexpanding clojure.core/fn at &amp;#40;clojure/core/unify.clj:83:18&amp;#41;.
run                 Run the project's -main function.
search              Search Central and Clojars for published artifacts.
show-profiles       List all available profiles or display one if given an argument.
test                Run the project's tests.
trampoline          Run a task without nesting the project's JVM inside Leiningen's.
uberjar             Package up the project files and all dependencies into a jar file.
update-in           Perform arbitrary transformations on your project map.
upgrade             Upgrade Leiningen to specified version or latest stable.
vcs                 Interact with the version control system.
version             Print version for Leiningen and the current JVM.
with-profile        Apply the given task with the profile&amp;#40;s&amp;#41; specified.

Run `lein help $TASK` for details.

Global Options:
  -o             Run a task offline.
  -U             Run a task after forcing update of snapshots.
  -h, --help     Print this help or help for a specific task.
  -v, --version  Print Leiningen's version.

These aliases are available:
downgrade, expands to upgrade

See also: readme, faq, tutorial, news, sample, profiles, deploying, gpg,
mixed-source, templates, and copying.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;この前後にPCのソフトウェア更新など諸々してたしJDK更新したからか？と云う気もしたが原因はわからず。&lt;/p&gt;&lt;p&gt;ブログを作るだけなら&lt;code&gt;lein run&lt;/code&gt;すりゃいいだけなのでなくてもよいのだが、見れたほうが良いので他のversionだとどうか試してみたところ、 0.12.5以上でならイケることがわかったので、cryogenの&lt;code&gt;project.clj&lt;/code&gt;に記述されてる&lt;code&gt;lein-ring&lt;/code&gt;のversionを上げることで障害を解消した。&lt;/p&gt;&lt;p&gt;ブログを書くための見えない部分の障害なので最も楽な解決方法でいったが、プロダクトでこれが起こってたらもっとエラーの原因を深掘りしたであろうな🤔&lt;/p&gt;
</description>
<pubDate>
Sun, 24 Feb 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-02-20-instead-of-ping
</guid>
<link>
http://krymtkts.github.io/posts/2019-02-20-instead-of-ping
</link>
<title>
`ping`の代わりに`Test-Connection`を使う
</title>
<description>
&lt;p&gt;PowerShellには&lt;code&gt;Test-Connection&lt;/code&gt;というやつがあるのを今更ながら知った。&lt;/p&gt;&lt;p&gt;今の仕事では、仮想マシン(dockerでない)を複数立ち上げて作業することが常になってるのだが、結構立ち上げ忘れてたりしてうっかりSSHしたときに繋げないのである😢&lt;/p&gt;&lt;p&gt;疎通確認と合わせてSSHするすべを探してたところ、これを知ったので以下のようなスクリプトを作ってCmderのTaskに登録して使っている。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;$waken = Test-Connection -TargetName $ip -Count 1 -Quiet
if &amp;#40;!$waken&amp;#41; {
    Write-Output &amp;quot;target not found. please start up $ip&amp;quot;
    $Host.UI.RawUI.ReadKey&amp;#40;&amp;#41; | Out-Null
    exit
}
ssh &amp;quot;admin@$ip&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href='https://blog.shibata.tech/entry/2016/06/16/231239'&gt;Test-Connectionが遅い理由と対策方法について - しばたテックブログ&lt;/a&gt;&lt;/p&gt;&lt;p&gt;↑このような話もあるようなので目を通しておきたいところ🤔&lt;/p&gt;&lt;h3 id=&quot;おまけ&quot;&gt;おまけ&lt;/h3&gt;&lt;p&gt;&lt;a href='https://qiita.com/twinkfrag/items/f3ecf79b68ea09eadec2'&gt;PowerShellでPause - Qiita&lt;/a&gt;&lt;/p&gt;&lt;p&gt;最近のPowerShellには&lt;code&gt;Pause&lt;/code&gt;なるもんがデフォで入ってるが、古来からの方法でEnter以外のキーでも使えるようにしておくのが良いであらうか？&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;Write-Output &amp;quot;type key to continue...&amp;quot;
$Host.UI.RawUI.ReadKey&amp;#40;&amp;#41; | Out-Null
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;スクリプトの中でコレを呼んだら、なんかのキーを押すまで止まる。&lt;/p&gt;&lt;p&gt;戻り値が標準出力されないようにするために&lt;code&gt;Out-Null&lt;/code&gt;にパイプラインする。&lt;code&gt;$null&lt;/code&gt;に代入でもよいが。&lt;/p&gt;&lt;h3 id=&quot;余談&quot;&gt;余談&lt;/h3&gt;&lt;p&gt;この記事をしたためておるときに&lt;code&gt;lein ring server&lt;/code&gt;でエラーが出るようになってたのを解消したので、メモがてら次回に記す。&lt;/p&gt;
</description>
<pubDate>
Wed, 20 Feb 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-02-11-Register-ArgumentCompleter2
</guid>
<link>
http://krymtkts.github.io/posts/2019-02-11-Register-ArgumentCompleter2
</link>
<title>
Register-ArgumentCompleterのScriptBlockの引数
</title>
<description>
&lt;p&gt;&lt;a href='./2019-02-04-Register-ArgumentCompleter.md'&gt;前回&lt;/a&gt;の続き。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;Register-ArgumentCompleter -Native -CommandName mvn -ScriptBlock {
    param&amp;#40;$wordToComplete, $commandAst, $cursorPosition&amp;#41;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↑こんなんいるやん？&lt;/p&gt;&lt;p&gt;&lt;code&gt;wordToComplete&lt;/code&gt;には入力中の文字列が入ってくる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;$commandAst&lt;/code&gt;にはコマンドラインが全部載ってくる。&lt;/p&gt;&lt;p&gt;でも実際詳しく知らんので、たとえば&lt;code&gt;maven clean install -pl :module1 -&lt;/code&gt;ってとこまで入力してCtrl+Spaceやったときにはどういうパラメータになるかわからんので調べた。&lt;/p&gt;&lt;p&gt;結論から言うと&lt;code&gt;$commandAst&lt;/code&gt;はASTが乗ってくる。&lt;code&gt;mvn clean install &amp;ndash;d&lt;/code&gt;でtabしたときのデバッガでの出力は以下の通り(デバッグ実行にはISEを利用した)。 &lt;a href='https://docs.microsoft.com/ja-jp/powershell/scripting/components/ise/exploring-the-windows-powershell-ise?view=powershell-6'&gt;Windows PowerShell ISE の操作 | Microsoft Docs&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;PS C:\Users\takatoshi\Desktop\maven&amp;gt; mvn clean install --d
ヒット 'C:\Users\takatoshi\dev\powershell\MavenAutoCompletion\MavenAutoCompletion.ps1:152' の行のブレークポイント
&amp;#91;DBG&amp;#93;: PS C:\Users\takatoshi\Desktop\maven&amp;gt;&amp;gt; $commandAst


CommandElements    : {mvn, clean, install, --d}
InvocationOperator : Unknown
DefiningKeyword    :
Redirections       : {}
Extent             : mvn clean install --d
Parent             : mvn clean install --d




&amp;#91;DBG&amp;#93;: PS C:\Users\takatoshi\Desktop\maven&amp;gt;&amp;gt; $wordToComplete
--d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;mvn clean install &amp;ndash;projects :&lt;/code&gt;でtabした場合↓&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;&amp;#91;DBG&amp;#93;: PS C:\Users\takatoshi\Desktop\maven&amp;gt;&amp;gt;
mvn clean install --projects :
ヒット 'C:\Users\takatoshi\dev\powershell\MavenAutoCompletion\MavenAutoCompletion.ps1:152' の行のブレークポイント
&amp;#91;DBG&amp;#93;: PS C:\Users\takatoshi\Desktop\maven&amp;gt;&amp;gt; $commandAst


CommandElements    : {mvn, clean, install, --projects...}
InvocationOperator : Unknown
DefiningKeyword    :
Redirections       : {}
Extent             : mvn clean install --projects :
Parent             : mvn clean install --projects :




&amp;#91;DBG&amp;#93;: PS C:\Users\takatoshi\Desktop\maven&amp;gt;&amp;gt; $commandAst.CommandElements


StringConstantType : BareWord
Value              : mvn
StaticType         : System.String
Extent             : mvn
Parent             : mvn clean install --projects :

StringConstantType : BareWord
Value              : clean
StaticType         : System.String
Extent             : clean
Parent             : mvn clean install --projects :

StringConstantType : BareWord
Value              : install
StaticType         : System.String
Extent             : install
Parent             : mvn clean install --projects :

StringConstantType : BareWord
Value              : --projects
StaticType         : System.String
Extent             : --projects
Parent             : mvn clean install --projects :

StringConstantType : BareWord
Value              : :
StaticType         : System.String
Extent             : :
Parent             : mvn clean install --projects :
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;wordToComplete&lt;/code&gt; こいつはまじでただの文字列。&lt;code&gt;commandAst.CommandElements&lt;/code&gt;の最後の要素の&lt;code&gt;value&lt;/code&gt;が出てる。&lt;/p&gt;&lt;p&gt;という感じだったので、MavenAutoCompletion的には&lt;code&gt;commandAst.CommandElements&lt;/code&gt;の最後から2要素を対象に正規表現してやれば、だいたい望みのことができるのがわかったのであった。&lt;/p&gt;&lt;h3 id=&quot;余談&quot;&gt;余談&lt;/h3&gt;&lt;p&gt;PowerShellで配列の任意の連続した要素を抜き出すのに、slice的なんがないんかと調べたところ、以下のようにするようだ。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;&amp;gt; $a = @&amp;#40;'mvn', 'clean', 'install', '-pl', ':'&amp;#41;
&amp;gt; $a&amp;#91;&amp;#40;$a.Length -2&amp;#41;..$a.Length&amp;#93;
-pl
:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;cool😉&lt;/p&gt;
</description>
<pubDate>
Mon, 11 Feb 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-02-04-Register-ArgumentCompleter
</guid>
<link>
http://krymtkts.github.io/posts/2019-02-04-Register-ArgumentCompleter
</link>
<title>
Register-ArgumentCompleter
</title>
<description>
&lt;p&gt;まだoutputが習慣化してなくて随分空いてしまった🤔&lt;/p&gt;&lt;h3 id=&quot;&lt;a href='https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/register-argumentcompleter?view=powershell-6'&gt;Register-ArgumentCompleter&lt;/a&gt;&quot;&gt;&lt;a href='https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/register-argumentcompleter?view=powershell-6'&gt;Register-ArgumentCompleter&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;PowerShell5から、従来の&lt;code&gt;TabExpansion&lt;/code&gt;に代わる&lt;code&gt;Register-ArgumentCompleter&lt;/code&gt;なるモノが現れたのは、PowerShellerなら知っているだろう(わたしは去年まで知らんかったのでPowerShellerではないのだ)。&lt;/p&gt;&lt;h3 id=&quot;サンプル書いてみた&quot;&gt;サンプル書いてみた&lt;/h3&gt;&lt;p&gt;Mavenのよく使うコマンドでお試し。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;Register-ArgumentCompleter -Native -CommandName mvn -ScriptBlock {
    param&amp;#40;$wordToComplete, $commandAst, $cursorPosition&amp;#41;

    echo -- clean install eclipse:eclipse |
        Where-Object { $&amp;#95; -like &amp;quot;$wordToComplete&amp;#42;&amp;quot; } |
        Sort-Object |
        ForEach-Object {
            &amp;#91;System.Management.Automation.CompletionResult&amp;#93;::new&amp;#40;$&amp;#95;, $&amp;#95;, 'ParameterValue', $&amp;#95;&amp;#41;
        }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;めちゃんこ簡単。&lt;/p&gt;&lt;h3 id=&quot;作ったもの&quot;&gt;作ったもの&lt;/h3&gt;&lt;p&gt;当時仕事で巨大なMavenプロジェクトを使っていて、コマンド打つのも億劫だったのでPowerShellで自動補完がほしいなと思っていたのだが、&lt;code&gt;TabExpantion&lt;/code&gt;はちょっと自分には使いこなせなかった。関数のオーバーライドをしたりのおまじないが必要だし。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Register-ArgumentCompleter&lt;/code&gt;なら簡単に作れたので、APIが進化してる感をひしと感じたのであった。以下成果物↓&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/krymtkts/MavenAutoCompletion'&gt;krymtkts/MavenAutoCompletion: MavenAutoCompletion provides a simple auto completion of Maven 3 to PowerShell.&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;既知のバグ&quot;&gt;既知のバグ&lt;/h3&gt;&lt;p&gt;PowerShell5だと&lt;code&gt;-Native&lt;/code&gt;オプションありの場合に&lt;code&gt;-&lt;/code&gt;を利用した補完ができないバグがあって、前述の自動補完がうまく使えなくて辛い...&lt;/p&gt;&lt;p&gt;&lt;a href='https://github.com/PowerShell/PowerShell/issues/2912'&gt;Native ArgumentCompleter not invoked for inputs that begin with hyphen (-) · Issue #2912 · PowerShell/PowerShell&lt;/a&gt;&lt;/p&gt;&lt;p&gt;PowerShell5.xでも使えないものかと試してみたところ、Trickyな回避策として&lt;code&gt;&amp;#x60;&lt;/code&gt;で&lt;code&gt;-&lt;/code&gt;をエスケープしたらイケるというのを見つけたが...posh-gitもchocolateyもそれで従来からの&lt;code&gt;TabExpantion&lt;/code&gt;を使ってたのかーという気付きは得られた。&lt;/p&gt;&lt;p&gt;ちなみにわたしはPowerShell6を使ってるのでかんけーないのだ😜&lt;/p&gt;&lt;h3 id=&quot;残&quot;&gt;残&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Register-ArgumentCompleter&lt;/code&gt;のScriptBlockの引数をちまちま調べたのがあるけど、長いから別に書こう。&lt;/p&gt;
</description>
<pubDate>
Mon, 04 Feb 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-01-17-build-qmk-firmware-of-planck
</guid>
<link>
http://krymtkts.github.io/posts/2019-01-17-build-qmk-firmware-of-planck
</link>
<title>
Planckのキーマップをビルドする
</title>
<description>
&lt;blockquote&gt;&lt;p&gt; 当時使ってたPCではプログラミングしなくなったのと、改めてQMK firmwareのdocument見たらbuild toolsんとこの記事が変わってるので、今度環境構築がてら再確認してfirmwareのとこだけ新しく書こうと思う。 &lt;/p&gt;&lt;p&gt; わたしのkeymapのrepo(&lt;a href='https://github.com/krymtkts/qmk_firmware'&gt;krymtkts/qmk_firmware&lt;/a&gt;)は「デフォのキーマップをコピった」的なコミットを最後に止まってるので、旧PCに遺物が残されてそう...作り直したほうが早いわ😅 &lt;/p&gt;&lt;p&gt; 去年はWSLで書き込む方法が確か使えてたはずだけど今は非推奨になってて、MSYS2を使う方法が主流になった？？？謎い🤔 &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;a href='./2019-01-14-ortho-linear-keyboard-planck'&gt;前回&lt;/a&gt;のこの辺の続き。&lt;/p&gt;&lt;h3 id=&quot;ビルド環境をセットアップする&quot;&gt;ビルド環境をセットアップする&lt;/h3&gt;&lt;p&gt;ドキュメント&lt;a href='https://docs.qmk.fm/#/getting_started_build_tools'&gt;QMK Firmware - Installing Build Tools&lt;/a&gt;に記載のWSLの手順をそのままでOK。ちょっとWSLを使いたかったのでMSYS2でのやつではあえてやらなかった。&lt;/p&gt;&lt;p&gt;WSL用のセットアップは&lt;code&gt;util/wsl&amp;#95;install.sh&lt;/code&gt;で行う。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ cd ./c/qmk&amp;#95;firmware/
$ ./util/wsl&amp;#95;install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;途中ドライバを全部入れる？と聞かれて、それは流石に...と思ったのでConnectedという接続したドライバだけ入れるやつ&lt;code&gt;C&lt;/code&gt;にした。&lt;/p&gt;&lt;p&gt;Flip入れる？と聞かれたけどつかわないだろうし必要なときに、と思ったので&lt;code&gt;N&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;wsl&amp;#95;install.sh&lt;/code&gt;完了後にPlanckのrev4のdefaultキーマップを試しにコンパイルする。&lt;/p&gt;&lt;p&gt;bashを再起動してサンプルのコマンドを実行する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ make planck/rev4:default
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;でバイナリが吐き出されたのでOK。&lt;/p&gt;&lt;h3 id=&quot;planckのfirmwareをビルドする&quot;&gt;Planckのfirmwareをビルドする&lt;/h3&gt;&lt;p&gt;わたしのキーマップはこちら→&lt;a href='https://github.com/krymtkts/qmk_firmware/blob/master/keyboards/planck/keymaps/krymtkts/keymap.c'&gt;qmk&amp;#95;firmware/keymap.c at master · krymtkts/qmk_firmware&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2017年末頃にビルドしたころとは&lt;code&gt;keyboards/planck/&lt;/code&gt;配下のコードが結構変わってるようなので、作成済みのキーマップを削除して新しく&lt;code&gt;default&lt;/code&gt;キーマップを作成する。それ用のシェルがあるので使う。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ ./util/new&amp;#95;keymap.sh planck krymtkts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これで一旦ビルドする。revisionはわからんけど時期的に5だと思う。[要出典?]&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ make planck/rev5:krymtkts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;コマンドラインでfirmwareを書き込む。revision5では以下のコマンドが正しい。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ make planck/rev5:krymtkts:dfu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;でもエラーになった。なんかエラーが無限に繰り返される。CTRL+Cで中断&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ make planck/rev5:krymtkts:dfu
QMK Firmware 0.6.228
Making planck/rev5 with keymap krymtkts and target dfu

avr-gcc &amp;#40;GCC&amp;#41; 4.9.2
Copyright &amp;#40;C&amp;#41; 2014 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Size before:
text    data     bss     dec     hex filename
    0   26614       0   26614    67f6 .build/planck&amp;#95;rev5&amp;#95;krymtkts.hex

Compiling: keyboards/planck/keymaps/krymtkts/keymap.c                                               &amp;#91;OK&amp;#93;
Linking: .build/planck&amp;#95;rev5&amp;#95;krymtkts.elf                                                            &amp;#91;OK&amp;#93;
Creating load file for flashing: .build/planck&amp;#95;rev5&amp;#95;krymtkts.hex                                    &amp;#91;OK&amp;#93;
Copying planck&amp;#95;rev5&amp;#95;krymtkts.hex to qmk&amp;#95;firmware folder                                             &amp;#91;OK&amp;#93;
Checking file size of planck&amp;#95;rev5&amp;#95;krymtkts.hex                                                      &amp;#91;OK&amp;#93;
&amp;#42; The firmware size is fine - 26614/28672 &amp;#40;2058 bytes free&amp;#41;
Error: Bootloader not found. Trying again in 5s.
Error: Bootloader not found. Trying again in 5s.
Error: Bootloader not found. Trying again in 5s.
Error: Bootloader not found. Trying again in 5s.
Error: Bootloader not found. Trying again in 5s.
&amp;#94;Ctmk&amp;#95;core/avr.mk:141: recipe for target 'dfu' failed
make&amp;#91;1&amp;#93;: &amp;#42;&amp;#42;&amp;#42; &amp;#91;dfu&amp;#93; Interrupt
Makefile:529: recipe for target 'planck/rev5:krymtkts:dfu' failed
make: &amp;#42;&amp;#42;&amp;#42; &amp;#91;planck/rev5:krymtkts:dfu&amp;#93; Interrupt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;エラーダイアログで「libusb0.dllがない」というような旨が表示される。WSLでやろうとしたからダメだったのか？&lt;/p&gt;&lt;p&gt;コマンドラインで焼くのを一旦諦めて、&lt;code&gt;qmk&amp;#95;tookbox.exe&lt;/code&gt;を使うことにしたら一発成功、Planckに自分のキーマップを焼くことに成功した。&lt;/p&gt;&lt;p&gt;でもコマンドラインで焼けないのは困るので、PlanckのMakefileの&lt;code&gt;rules.mk&lt;/code&gt;見てみたところ、&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;makefile&quot;&gt;ifeq &amp;#40;$&amp;#40;strip $&amp;#40;KEYBOARD&amp;#41;&amp;#41;, planck/rev4&amp;#41;
    BOOTLOADER = atmel-dfu
endif
ifeq &amp;#40;$&amp;#40;strip $&amp;#40;KEYBOARD&amp;#41;&amp;#41;, planck/rev5&amp;#41;
    BOOTLOADER = qmk-dfu
endif
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;とあって、rev4と4rev5でbootloaderが変わってることから、あれ？わたしのPlanckもしかしてrev4じゃ？と思って試してみたところ...&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ make planck/rev4:krymtkts:dfu
QMK Firmware 0.6.228
Making planck/rev4 with keymap krymtkts and target dfu

avr-gcc &amp;#40;GCC&amp;#41; 4.9.2
Copyright &amp;#40;C&amp;#41; 2014 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Compiling: quantum/audio/muse.c                                                                     &amp;#91;OK&amp;#93;
Compiling: keyboards/planck/planck.c                                                                &amp;#91;OK&amp;#93;
Compiling: keyboards/planck/keymaps/krymtkts/keymap.c                                               &amp;#91;OK&amp;#93;
Compiling: quantum/quantum.c                                                                        &amp;#91;OK&amp;#93;
Compiling: quantum/keymap&amp;#95;common.c                                                                  &amp;#91;OK&amp;#93;
Compiling: quantum/keycode&amp;#95;config.c                                                                 &amp;#91;OK&amp;#93;
Compiling: quantum/matrix.c                                                                         &amp;#91;OK&amp;#93;
Compiling: quantum/process&amp;#95;keycode/process&amp;#95;audio.c                                                  &amp;#91;OK&amp;#93;
Compiling: quantum/process&amp;#95;keycode/process&amp;#95;clicky.c                                                 &amp;#91;OK&amp;#93;
Compiling: quantum/audio/audio.c                                                                    &amp;#91;OK&amp;#93;
Compiling: quantum/audio/voices.c                                                                   &amp;#91;OK&amp;#93;
Compiling: quantum/audio/luts.c                                                                     &amp;#91;OK&amp;#93;
Compiling: quantum/process&amp;#95;keycode/process&amp;#95;music.c                                                  &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/host.c                                                                   &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/keyboard.c                                                               &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/action.c                                                                 &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/action&amp;#95;tapping.c                                                         &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/action&amp;#95;macro.c                                                           &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/action&amp;#95;layer.c                                                           &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/action&amp;#95;util.c                                                            &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/print.c                                                                  &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/debug.c                                                                  &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/util.c                                                                   &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/eeconfig.c                                                               &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/report.c                                                                 &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/avr/suspend.c                                                            &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/avr/timer.c                                                              &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/avr/bootloader.c                                                         &amp;#91;OK&amp;#93;
Assembling: tmk&amp;#95;core/common/avr/xprintf.S                                                           &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/common/magic.c                                                                  &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/protocol/lufa/lufa.c                                                            &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/protocol/usb&amp;#95;descriptor.c                                                       &amp;#91;OK&amp;#93;
Compiling: tmk&amp;#95;core/protocol/lufa/outputselect.c                                                    &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Class/Common/HIDParser.c                                       &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Device&amp;#95;AVR8.c                                        &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/EndpointStream&amp;#95;AVR8.c                                &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Endpoint&amp;#95;AVR8.c                                      &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Host&amp;#95;AVR8.c                                          &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/PipeStream&amp;#95;AVR8.c                                    &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Pipe&amp;#95;AVR8.c                                          &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBController&amp;#95;AVR8.c                                 &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt&amp;#95;AVR8.c                                  &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/ConfigDescriptors.c                                       &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c                                       &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/Events.c                                                  &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.c                                         &amp;#91;OK&amp;#93;
Compiling: lib/lufa/LUFA/Drivers/USB/Core/USBTask.c                                                 &amp;#91;OK&amp;#93;
Linking: .build/planck&amp;#95;rev4&amp;#95;krymtkts.elf                                                            &amp;#91;OK&amp;#93;
Creating load file for flashing: .build/planck&amp;#95;rev4&amp;#95;krymtkts.hex                                    &amp;#91;OK&amp;#93;
Copying planck&amp;#95;rev4&amp;#95;krymtkts.hex to qmk&amp;#95;firmware folder                                             &amp;#91;OK&amp;#93;
Checking file size of planck&amp;#95;rev4&amp;#95;krymtkts.hex                                                      &amp;#91;OK&amp;#93;
 &amp;#42; The firmware size is fine - 26614/28672 &amp;#40;2058 bytes free&amp;#41;
Bootloader Version: 0x00 &amp;#40;0&amp;#41;
Erasing flash...  Success
Checking memory from 0x0 to 0x6FFF...  Empty.
Checking memory from 0x0 to 0x67FF...  Empty.
0%                            100%  Programming 0x6800 bytes...
&amp;#91;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;#93;  Success
0%                            100%  Reading 0x7000 bytes...
&amp;#91;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;#93;  Success
Validating...  Success
0x6800 bytes written into 0x7000 bytes memory &amp;#40;92.86%&amp;#41;.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;成功した。時期的にrev5だと思ってたけどrev4だったとは😅まあうまくいってよかった。&lt;/p&gt;&lt;p&gt;キーマップはまだしっくり来ていないのでちまちま更新する予定。&lt;/p&gt;
</description>
<pubDate>
Thu, 17 Jan 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-01-14-ortho-linear-keyboard-planck
</guid>
<link>
http://krymtkts.github.io/posts/2019-01-14-ortho-linear-keyboard-planck
</link>
<title>
Ortho-Linear Keyboard &quot;Planck&quot;
</title>
<description>
&lt;p&gt;わたしが&lt;a href='https://olkb.com/planck/'&gt;Planck&lt;/a&gt;を手に入れたのは割と遅めのタイミング。&lt;/p&gt;&lt;p&gt;2017年の春に&lt;a href='https://www.massdrop.com/'&gt;Massdrop&lt;/a&gt;で買って、6月末に届く予定だったのだけど、手元に届いたのが秋頃だった。jackhumbertさん(OLKBの中の人)随分忙しかったようで遅れまくり。&lt;/p&gt;&lt;p&gt;普段の仕事では&lt;a href='https://ergodox-ez.com/'&gt;Ergodox EZ&lt;/a&gt;を使ってるんやが、持ち運びに便利なminimalなキーボードが欲しくて買った。&lt;/p&gt;&lt;p&gt;以下はその作業ログである。&lt;/p&gt;&lt;p&gt;&lt;hr/&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;date: 2017-10-07&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-case-keyswitches.jpg&quot; alt=&quot;者共&quot; /&gt;&lt;/p&gt;&lt;p&gt;ケース付き、キースイッチ付きでDIYキットを購入。キースイッチはCherry MX Clear。&lt;/p&gt;&lt;h3 id=&quot;はじめに&quot;&gt;はじめに&lt;/h3&gt;&lt;h4 id=&quot;手順の理解&quot;&gt;手順の理解&lt;/h4&gt;&lt;p&gt;Jack Humbert氏のYoutubeを見てイメージを掴む。&lt;/p&gt;&lt;p&gt;&lt;a href='https://www.youtube.com/watch?v=S2FApwzVxAQ'&gt;How to Actually Build a Planck (or Preonic or Atomic) from OLKB&lt;/a&gt;&lt;/p&gt;&lt;p&gt;説明動画を見てケッコー以外だったのが、key switchの端子の歪みを素手で直してた所。ピンセットとか使わないんや...&lt;/p&gt;&lt;h3 id=&quot;作業に入る&quot;&gt;作業に入る&lt;/h3&gt;&lt;h4 id=&quot;検品&quot;&gt;検品&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-picking.jpg&quot; alt=&quot;パーツ欠品確認&quot; /&gt;&lt;/p&gt;&lt;p&gt;パーツは全部揃っている。数も数えたしOK&lt;/p&gt;&lt;p&gt;一箇所Switch Plateに多分プレス時にズレかなんかあったであろう痕があってちょっと残念。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-unfortunate.jpg&quot; alt=&quot;プレスミス？&quot; /&gt;&lt;/p&gt;&lt;p&gt;PCBはUSBに接続して音がなればOKとのこと。ファンシーなnoiseが奏でられた&lt;/p&gt;&lt;p&gt;PlanckはLEDにも対応してるけど、今回はデフォ実装するためナシ。でも今後欲しい感じもする。&lt;/p&gt;&lt;h4 id=&quot;switchはめ込み&quot;&gt;Switchはめ込み&lt;/h4&gt;&lt;p&gt;Sitch PlateにKey Switchをはめる&lt;/p&gt;&lt;p&gt;48Keyで使う。ちょっと数が多いしはめ込むのは面倒だけど、黙々とやる。 KeySwitchの端子がひん曲がっているやつはピンで直しながらはめ込んでいきく。&lt;/p&gt;&lt;p&gt;真ん中の1 or 2 keyがえらべるところはPCBにはんだ付けするまでswitchがスライドするので注意。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-half.jpg&quot; alt=&quot;半分まではめ込んだ&quot; /&gt;&lt;/p&gt;&lt;p&gt;全部はめ込んだ痕でSwitch Plateの裏表があるっぽいことに気づく。裏側のほうがピカピカしてる。でも傷が多いので今のままで行こうと決定&lt;/p&gt;&lt;h4 id=&quot;soldering&quot;&gt;Soldering&lt;/h4&gt;&lt;p&gt;マスクを着用。&lt;/p&gt;&lt;p&gt;今回ハンダゴテを新調した。白光のいいやつで温度調節ができる。調べた感じだとkeyboardのPCBにはんだ付けする最適温度が350とのことなので、それがえらべるのが良い。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-solders.jpg&quot; alt=&quot;ハンダゴテ比較&quot; /&gt;&lt;/p&gt;&lt;p&gt;ギターの配線用に使ってた旧・ハンダゴテとは随分と違う...&lt;/p&gt;&lt;p&gt;黙々とはんだ付けする。格子状に並んでいるので非常に楽。いやハンダゴテが良いモノだからなのかも。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-soldering.jpg&quot; alt=&quot;作業中&quot; /&gt;&lt;/p&gt;&lt;p&gt;はんだ付け完了したのがこちら。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-soldered.jpg&quot; alt=&quot;はんだ付け完了&quot; /&gt;&lt;/p&gt;&lt;p&gt;ところどころ熱で弾けたであろうヤニが付いてるので、組込前に掃除にした。&lt;/p&gt;&lt;h4 id=&quot;keycapはめ込み&quot;&gt;keycapはめ込み&lt;/h4&gt;&lt;p&gt;今回keycapはセットで買えたXDAのやつにした。もちろん印字なんかは不要。&lt;/p&gt;&lt;p&gt;作業中の写真なし。無念の撮り忘れ😭&lt;/p&gt;&lt;p&gt;完成！&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/2019-01-14-planck/planck-complete.jpg&quot; alt=&quot;美しい完成品&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;hr/&gt;&lt;/p&gt;&lt;p&gt;...最後のfirmwareのビルドのところがログに残ってないのだけど、Ergodox EZのキーマップをビルドするDockerでできてたような気がする。firmwareも書き込み済み。&lt;/p&gt;&lt;p&gt;当時使ってたPCではプログラミングしなくなったのと、改めてQMK firmwareのdocument見たらbuild toolsんとこの記事が変わってるので、今度環境構築がてら再確認してfirmwareのとこだけ新しく書こうと思ってる(作業中)。&lt;/p&gt;&lt;p&gt;わたしのkeymapのrepo(&lt;a href='https://github.com/krymtkts/qmk_firmware'&gt;krymtkts/qmk_firmware&lt;/a&gt;)は「デフォのキーマップをコピった」的なコミットを最後に止まってるので、旧PCに遺物が残されてそう😅&lt;/p&gt;&lt;p&gt;去年はWSLで書き込む方法が確か使えてたはずだけど今は非推奨になってて、MSYS2を使う方法が主流になった？？？謎い🤔&lt;/p&gt;&lt;p&gt;にしてもや、この文章を認めるためにOLKBのページを久しぶりに見たが、今のPCBはrevision.6で、hot swappableなkey switch、接続はUSB Type-Cという進化っぷりに驚きを隠せない😰わたしのはrev.5かそれ以前(忘れた)&lt;/p&gt;
</description>
<pubDate>
Mon, 14 Jan 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-01-10-make-blog-with-clojure
</guid>
<link>
http://krymtkts.github.io/posts/2019-01-10-make-blog-with-clojure
</link>
<title>
Clojureでブログを作った
</title>
<description>
&lt;p&gt;このブログはClojure製の静的サイトジェネレータ&lt;a href='http://cryogenweb.org/'&gt;Cryogen&lt;/a&gt;で作った。&lt;/p&gt;&lt;h3 id=&quot;動機&quot;&gt;動機&lt;/h3&gt;&lt;p&gt;現在有給消化中のため暇である。プログラマ的暇潰しが必要だったのだが、ブログを作るのはそれなりに楽しめそうな気がした。&lt;/p&gt;&lt;p&gt;あと、過去にブログサービスを使ってたときブログが長続きしなかった理由に、わたしは物書きじゃあないので簡単にブログが書けるとかいう部分が琴線に触れない、というようなものが根底にあるような気もする🤔&lt;/p&gt;&lt;p&gt;自分で作るならその心配はない。&lt;/p&gt;&lt;p&gt;ついでに折角GitHubのアカウントも持ってるので、GitHub Pagesを使わない手はない。blogのコードをrepoに登録しておけば芝生も青々としてええな！的な。&lt;/p&gt;&lt;p&gt;また別の観点としてブログサービスを選ぶとなった場合、書く記事の内容が技術的なものだったり単なる趣味の話だったり内容がブレると思うので、利用規約に触れて垢バンされるようなサービスは選び辛い。ちょうど良い選択かも知れない。&lt;/p&gt;&lt;p&gt;そこで今回はブログ自体を自分で作ってしまおうと決めた。&lt;/p&gt;&lt;p&gt;因みにClojureを選んだのは個人的な好みである。&lt;/p&gt;&lt;h3 id=&quot;静的サイトジェネレータの選定&quot;&gt;静的サイトジェネレータの選定&lt;/h3&gt;&lt;p&gt;普通にググって調べようと思ってたけど、いまはこんなのクソ便利なんがあるのね...→&lt;a href='https://www.staticgen.com/'&gt;StaticGen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;LanguageをClojureにしたら3個hitしたのでそれぞれ見てみた。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/cryogen-project/cryogen'&gt;Cryogen&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/liquidz/misaki'&gt;Misaki&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/hashobject/perun'&gt;Perun&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Misakiは永らくメンテされてないからなし。 CryogenもPerunも、検索したら日本語の情報にhitするのでやりがいに違いはなさそう。 単純に⭐が多いのとBootを使ったことがないというだけの理由で&lt;a href='https://github.com/cryogen-project/cryogen'&gt;Cryogen&lt;/a&gt;を使うことにした。&lt;/p&gt;&lt;p&gt;(後知恵だが、ここはもっと慎重に考えた方が良かった)&lt;/p&gt;&lt;h3 id=&quot;&lt;a href='https://github.com/cryogen-project/cryogen'&gt;Cryogen&lt;/a&gt;を使ってぶろぐを作ろうぜ&quot;&gt;&lt;a href='https://github.com/cryogen-project/cryogen'&gt;Cryogen&lt;/a&gt;を使ってぶろぐを作ろうぜ&lt;/h3&gt;&lt;p&gt;ドキュメントが充実してるので、書いたてることに従うだけで簡単にできた。&lt;/p&gt;&lt;p&gt;出来上がったコードはこちら→&lt;a href='https://github.com/krymtkts/blog-cryogen'&gt;My personal blog project&lt;/a&gt;&lt;/p&gt;&lt;p&gt;以降に記すコマンド例はPowerShellで実行したものである。筆者はWindows10ユーザなので。&lt;/p&gt;&lt;h4 id=&quot;手始めに&quot;&gt;手始めに&lt;/h4&gt;&lt;p&gt;Leiningenでテンプレートを作成する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;poershell&quot;&gt;lein new cryogen blog
Retrieving cryogen/lein-template/0.3.7/lein-template-0.3.7.pom from clojars
Retrieving leinjacker/leinjacker/0.4.2/leinjacker-0.4.2.pom from clojars
Retrieving org/clojure/core.contracts/0.0.1/core.contracts-0.0.1.pom from central
Retrieving org/clojure/pom.contrib/0.0.26/pom.contrib-0.0.26.pom from central
Retrieving org/clojure/core.unify/0.5.3/core.unify-0.5.3.pom from central
Retrieving cryogen/lein-template/0.3.7/lein-template-0.3.7.jar from clojars
Retrieving org/clojure/core.contracts/0.0.1/core.contracts-0.0.1.jar from central
Retrieving org/clojure/core.unify/0.5.3/core.unify-0.5.3.jar from central
Retrieving org/clojure/clojure/1.4.0/clojure-1.4.0.jar from central
Retrieving leinjacker/leinjacker/0.4.2/leinjacker-0.4.2.jar from clojars
Generating fresh 'lein new' Cryogen project.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ブログを動かしてみよう&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;poershell&quot;&gt;lein ring server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ブラウザに表示された。OK👍&lt;/p&gt;&lt;h4 id=&quot;コンテンツを整理する&quot;&gt;コンテンツを整理する&lt;/h4&gt;&lt;p&gt;わたしの場合はMarkdownで書くのでAsciiDocのディレクトリは消してしまう。サーバ起動中にこれをやると例外が発生する、止めてからやるのが良いだろう。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;Remove-Item -Recurse -Path ./resources/templates/ascii
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;あとsampleで置いてあるpostやaboutを自分用に書き換えるなど。&lt;/p&gt;&lt;h4 id=&quot;テーマを作る&quot;&gt;テーマを作る&lt;/h4&gt;&lt;p&gt;themeはデフォで&lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;blue&amp;#95;centered&lt;/code&gt;, &lt;code&gt;lotus&lt;/code&gt;, &lt;code&gt;nucleus&lt;/code&gt;の4種類置いてある。&lt;code&gt;lotus&lt;/code&gt;を使うとエラーになったけど、これを直すのが目的じゃないので無視した🙈&lt;/p&gt;&lt;p&gt;自分用のテーマとしては何が良いかな？と検討して、お気に入りのSolarizedにしようと決めた。terminalやeditorはSolarized darkを使っているが、ブログはlightでやろうと思う。syntax highlightingについてはいつも通りのdarkを採用することにした。&lt;/p&gt;&lt;p&gt;&lt;a href='https://ethanschoonover.com/solarized/'&gt;Solarized&lt;/a&gt;を参考に自分でthemeを作る。元にするのは&lt;code&gt;blue&amp;#95;centered&lt;/code&gt;にした。ブラウザの開発者ツールで見てみてもレスポンシブデザインになってたし、cssのコード量も少なくてシンプルなのがいい。&lt;/p&gt;&lt;p&gt;&lt;code&gt;resources/templates/themes&lt;/code&gt;にファイル名&lt;code&gt;solarized&amp;#95;light&lt;/code&gt;でコピって書き換える。&lt;/p&gt;&lt;p&gt;基本は書いたあるルールに沿うけど一部それとなく変える。カラーコードの編集はsassにしたら楽だろうけどコピった元はそうじゃないので、該当する箇所を書き換えるだけに留めた。&lt;/p&gt;&lt;p&gt;Cryogenのsyntax highlightingは&lt;code&gt;highlight.js&lt;/code&gt;が採用されている。 デフォの24種だと使わないやつもいるので削って、使いそうな言語を足したものを&lt;a href='https://highlightjs.org/download/'&gt;highlight.js&lt;/a&gt;で作ってダウンロードする。 これは手動でダウンロードして、デフォの&lt;code&gt;highlight.pack.js&lt;/code&gt;に上書きした。&lt;/p&gt;&lt;p&gt;スタイルは&lt;code&gt;base.html&lt;/code&gt;で&lt;code&gt;default&lt;/code&gt;が指定されているので&lt;code&gt;solarized&amp;#95;dark&lt;/code&gt;を選ぶ。ついでにhighlight.jsのversionも9.7から9.13.1へ上げちゃう。&lt;/p&gt;&lt;p&gt;404 Page not foundのときのページがどうやって表示されるのかわからなかったが、GitHub Pagesの機能で提供されるルールに従えば良い様子。&lt;/p&gt;&lt;p&gt;&lt;a href='https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/'&gt;Customizing GitHub Pages / Creating a custom 404 page for your GitHub Pages site&lt;/a&gt;&lt;/p&gt;&lt;p&gt;デフォの404ページのスタイルが他のページとぜんぜん違うので、スタイルに合わせておいた。&lt;/p&gt;&lt;p&gt;ページが縦に長くなって垂直スクロールバーが出るとコンテンツのズレが生じるのだけど、これ多分bootstrapに起因する問題か🤔悩ましいが一旦そのままに。&lt;/p&gt;&lt;p&gt;これでおおよそのデザイン面は完成した。&lt;/p&gt;&lt;p&gt;作業中のコードは一旦BitBucketのprivate repoにブチ込んでおいたのだけど、GitHubの無償アカウントでもprivate repoが使えるようになって分ける理由がなくなってしまった...まあよし。&lt;/p&gt;&lt;p&gt;あと、&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Bootstrap3から4に上げたい&lt;/li&gt;&lt;li&gt;Google Analytics&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;など残しているが、一旦はコンテンツの公開を優先して後回しにする予定。&lt;/p&gt;&lt;h4 id=&quot;github&amp;#95;pagesにうｐる&quot;&gt;GitHub Pagesにうｐる&lt;/h4&gt;&lt;p&gt;&lt;a href='https://pages.github.com/'&gt;GitHub Pages&lt;/a&gt;の説明と&lt;a href='http://cryogenweb.org/docs/deploying-to-github-pages.html'&gt;Cryogen - GitHub Pages&lt;/a&gt;を見たらできる。&lt;/p&gt;&lt;p&gt;作るのはユーザーのpageなので、まず&lt;code&gt;krymtkts.github.io&lt;/code&gt;のrepoを作る。 中身は空で。Licenseの選択もなし。&lt;/p&gt;&lt;p&gt;Cryogenのドキュメントに従い、&lt;code&gt;config.edn&lt;/code&gt;の&lt;code&gt;blog-prefix&lt;/code&gt;キーの値は空にする。&lt;/p&gt;&lt;p&gt;あとはCryogenが出力した&lt;code&gt;resource/public&lt;/code&gt;を先程作ったrepoのmasterブランチにpushするのみ。&lt;/p&gt;&lt;p&gt;この出力先&lt;code&gt;resource/public&lt;/code&gt;を変更する方法がわからなかったので、&lt;code&gt;krymtkts.github.io&lt;/code&gt;という名前のシンボリックリンクを作って、あたかもそういう名前のフォルダをGitで管理してる感を醸し出して茶を濁した。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;poershell&quot;&gt;New-Item -Value '.\blog\resources\public\' -Path './' -Name 'krymtkts.github.io' -ItemType SymbolicLink
cd krymtkts.github.io
git init
echo &amp;quot;# krymtkts.github.io&amp;quot; &amp;gt;&amp;gt; README.md
git add README.md
git commit -m &amp;quot;First commit&amp;quot;
git add .
git commit -m 'Add contents'
git remote add origin git@github.com:krymtkts/krymtkts.github.io.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでわたしのブログがpublishされたのであった🎉&lt;/p&gt;&lt;p&gt;めでたしめでたし...&lt;/p&gt;&lt;h3 id=&quot;to&amp;#95;be&amp;#95;continued&quot;&gt;To be continued&lt;/h3&gt;&lt;p&gt;で終わらなかった。&lt;/p&gt;&lt;p&gt;これを作りきって、急激にCryogenに興味がなくなってしまった。&lt;/p&gt;&lt;p&gt;結局の所、テンプレートエンジンにSelmerを使ってることで、HTMLやスタイルの編集自体にClojure感の薄さがあってなんか楽しみがないのかなと。最初から予想できそうな結果やけどな🤔&lt;/p&gt;&lt;p&gt;コンテンツ自体はMarkdownで書くし可搬性があるので記事の更新はしつつ、次段階としてPerunで作り直してみようと思う。&lt;/p&gt;&lt;p&gt;破壊と創造こそが人類の本質ですね(違う&lt;/p&gt;
</description>
<pubDate>
Thu, 10 Jan 2019 00:00:00 +0900
</pubDate>
</item>
<item>
<guid>
http://krymtkts.github.io/posts/2019-01-08-first-post
</guid>
<link>
http://krymtkts.github.io/posts/2019-01-08-first-post
</link>
<title>
ブログを始めた
</title>
<description>
&lt;p&gt;ブログを始めてみた。&lt;/p&gt;&lt;p&gt;自分のメモを取るのには永らくEvernoteを使ってるのだけど、そういったものをまとめてアウトプットできるものが欲しいなー、と常々思ってた。&lt;/p&gt;&lt;p&gt;ただ過去にブログサービスを使ってたときは大して続かなく、また中等半端にやめかねないなという気持ちもあったのだが、去年アラフォーになったことであるし、不惑ということで一歩踏み出してみたのである。&lt;/p&gt;&lt;p&gt;自己紹介は&lt;a href='../../pages/about'&gt;About Me&lt;/a&gt;を参照いただきたく🙇&lt;/p&gt;&lt;p&gt;当面は自分の作業ログを清書したものを書いていくつもりやけど、もし誰かの目に留まって、何かの役に立ったなら幸いである。&lt;/p&gt;
</description>
<pubDate>
Tue, 08 Jan 2019 00:00:00 +0900
</pubDate>
</item>
</channel>
</rss>
